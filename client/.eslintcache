[{"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx":"1","/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js":"2","/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx":"3","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Home/Home.jsx":"4","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx":"5","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx":"6","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx":"7","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx":"8","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx":"9","/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx":"10","/home/khoaf/Programing/Cafe_Manager_Official/client/src/components/AlertSuccess/index.jsx":"11"},{"size":500,"mtime":1607501859058,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607501859058,"results":"14","hashOfConfig":"13"},{"size":484,"mtime":1607501859058,"results":"15","hashOfConfig":"13"},{"size":625,"mtime":1607501859058,"results":"16","hashOfConfig":"13"},{"size":3133,"mtime":1607501859058,"results":"17","hashOfConfig":"13"},{"size":3133,"mtime":1607502558324,"results":"18","hashOfConfig":"13"},{"size":2183,"mtime":1607501859058,"results":"19","hashOfConfig":"13"},{"size":13928,"mtime":1607501859058,"results":"20","hashOfConfig":"13"},{"size":18234,"mtime":1607509557958,"results":"21","hashOfConfig":"13"},{"size":210,"mtime":1607501859058,"results":"22","hashOfConfig":"13"},{"size":576,"mtime":1607509170162,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"scusqh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx",[],["49","50"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Home/Home.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx",["51","52"],"import React, {useEffect, useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport {Container} from '../../containers/Login'\nimport axios from 'axios';\n\n\nconst Login = () => {\n    //Loading data\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        checkUser() // Fetch games when component is mounted\n      }, [])\n    //Control input value\n    const [user,setUser] = useState('');\n    const onChangeUser = (e) => {setUser(e.target.value)}\n    const [password,setPassword] = useState('');\n    const onChangePassword = (e) => {setPassword(e.target.value)}\n    // LoginButton onClick\n    const checkUser = () => {\n            fetch('http://localhost:9000/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                user,\n                password \n              }),\n            })\n              .then((res) => res.json())\n              .then((result) => setData(result))\n            //   .then((info) => console.log(info))\n              .catch((err) => console.log('error'))\n    };\n    const handleChange = (event) => {\n        checkUser();\n        console.log(data);\n        // console.log(\"da nhan nut\");\n        try{\n            if(data.status === true)\n                // console.log(\"dang nhap thanh cong\");\n                 console.log('chao than');\n                // window.location.replace(`http://localhost:3000/${user}${password}/employees`);\n        }catch(e){\n                window.alert(\"user/password wrong!\");\n        }\n      }\n\n    //Render\n    return (\n        <>\n            <Container>\n                <h1>Login</h1>\n                <form>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"user\"\n                        label=\"User Name\"\n                        name=\"user\"\n                        autoComplete=\"user\"\n                        autoFocus\n                        value={user}\n                        onChange={onChangeUser}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={onChangePassword}\n                    />\n                    <Button \n                        onClick={handleChange}\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                    >\n                        Log in \n                    </Button>\n                </form>\n            </Container>\n        </>\n    )\n}\nexport default Login","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx",["53","54","55","56"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { green } from '@material-ui/core/colors';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './style.css';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    container: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '25px'\n    },\n    speedDial: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n  }));\n\n\nconst Celendar = () => {\n    const classes = useStyles();\n\n    // loading data\n    const [rows, setRows] = useState([]);\n    // filter data\n    const [rowsFilter, setRowsFilter] = useState([\n        {\n            id: 1,\n            mon: 1,\n            tue: 1,\n            wed: 0,\n            thu: 0,\n            fri: 1,\n            sat: 1,\n            sun: 0\n        }\n    ]);\n    // speedDial\n    const handleSpeedDial = () => {openDialog();}\n    // dialog \n    const [dialog, setDialog] = useState(false);\n    const openDialog = () => {setDialog(true)};\n    const closeDialog = () => {setDialog(false)};\n    // dialog submit\n    const handleDialogActionUpdate = () => {}\n    // update by select\n        //monday\n    const [mon, setMon] = useState(0);\n    const handleChangeMon = (e) => {setMon(e.target.value);};\n        //tuesday\n    const [tue, setTue] = useState(0);\n    const handleChangeTue = (e) => {setTue(e.target.value);};\n        //wed\n    const [wed, setWed] = useState(0);\n    const handleChangeWed = (e) => {setWed(e.target.value);};\n        //Thursday\n    const [thu, setThu] = useState(0);\n    const handleChangeThu = (e) => {setThu(e.target.value);};\n        // Friday\n    const [fri, setFri] = useState(0);\n    const handleChangeFri = (e) => {setFri(e.target.value);};\n        //saturday\n    const [sat, setSat] = useState(0);\n    const handleChangeSat = (e) => {setSat(e.target.value);};\n        //sunday\n    const [sun, setSun] = useState(0);\n    const handleChangeSun = (e) => {setSun(e.target.value);};\n    // render\n    return (\n        <>\n            {/* Title Employees */}\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Celendar\n            </Typography>\n            {/* Searching */}\n            <div className={classes.container}>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        placeholder=\"Search employee by id\"\n                        inputProps={{ 'aria-label': 'search employee' }}\n                    />\n                    <IconButton aria-label=\"search\" className={classes.iconButton}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </div>\n            {/* Table show employees */}\n            <form>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name's Employees</TableCell>\n                                <TableCell align=\"center\">Monday</TableCell>\n                                <TableCell align=\"center\">Tuesday</TableCell>\n                                <TableCell align=\"center\">Wednesday</TableCell>\n                                <TableCell align=\"center\">Thursday</TableCell>\n                                <TableCell align=\"center\">Friday</TableCell>\n                                <TableCell align=\"center\">Saturday</TableCell>\n                                <TableCell align=\"center\">Sunday</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {/* Render element to table from Employees Table (mysql)*/}\n                        <TableBody>\n                            {rowsFilter.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\"> Duong Dang Khoa </TableCell>\n                                    {row.mon === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.tue === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.wed === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.thu === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.fri === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sat === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sun === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </form>\n            <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<EditIcon />}\n                    onClick={handleSpeedDial}\n                    className={classes.speedDial}\n            > \n            </SpeedDial>\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To update new calendar employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\n                        <Select\n                            labelId=\"mon-label\"\n                            id=\"mon\"\n                            value={mon}\n                            onChange={handleChangeMon}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\n                        <Select\n                            labelId=\"tue-label\"\n                            id=\"tue\"\n                            value={tue}\n                            onChange={handleChangeTue}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\n                        <Select\n                            labelId=\"wed-label\"\n                            id=\"wed\"\n                            value={wed}\n                            onChange={handleChangeWed}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\n                        <Select\n                            labelId=\"thu-label\"\n                            id=\"thu\"\n                            value={thu}\n                            onChange={handleChangeThu}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\n                        <Select\n                            labelId=\"fri-label\"\n                            id=\"fri\"\n                            value={fri}\n                            onChange={handleChangeFri}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\n                        <Select\n                            labelId=\"sat-label\"\n                            id=\"sat\"\n                            value={sat}\n                            onChange={handleChangeSat}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\n                        <Select\n                            labelId=\"sun-label\"\n                            id=\"sun\"\n                            value={sun}\n                            onChange={handleChangeSun}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\" >\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Celendar\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx",["57","58","59"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/components/AlertSuccess/index.jsx",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":8,"nodeType":"66","messageId":"67","endLine":5,"endColumn":13},{"ruleId":"68","severity":1,"message":"69","line":13,"column":10,"nodeType":"70","endLine":13,"endColumn":12,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"72","line":26,"column":8,"nodeType":"66","messageId":"67","endLine":26,"endColumn":17},{"ruleId":"64","severity":1,"message":"73","line":76,"column":12,"nodeType":"66","messageId":"67","endLine":76,"endColumn":16},{"ruleId":"64","severity":1,"message":"74","line":76,"column":18,"nodeType":"66","messageId":"67","endLine":76,"endColumn":25},{"ruleId":"64","severity":1,"message":"75","line":78,"column":24,"nodeType":"66","messageId":"67","endLine":78,"endColumn":37},{"ruleId":"64","severity":1,"message":"76","line":154,"column":21,"nodeType":"66","messageId":"67","endLine":154,"endColumn":29},{"ruleId":"64","severity":1,"message":"76","line":182,"column":21,"nodeType":"66","messageId":"67","endLine":182,"endColumn":29},{"ruleId":"64","severity":1,"message":"76","line":203,"column":21,"nodeType":"66","messageId":"67","endLine":203,"endColumn":29},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'TextField' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'setRowsFilter' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [checkUser]",{"range":"82","text":"83"},[400,402],"[checkUser]"]