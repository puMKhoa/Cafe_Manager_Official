[{"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\index.jsx":"1","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\reportWebVitals.js":"2","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\App.jsx":"3","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Home\\Home.jsx":"4","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Workplace\\Workplace.jsx":"5","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Employees\\Employees.jsx":"6","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Login\\Login.jsx":"7","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Menu\\Menu.jsx":"8","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Celendar\\Celendar.jsx":"9","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\containers\\Login\\index.jsx":"10"},{"size":517,"mtime":1607589100521,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1607589100523,"results":"13","hashOfConfig":"12"},{"size":512,"mtime":1607589100520,"results":"14","hashOfConfig":"12"},{"size":649,"mtime":1607589100522,"results":"15","hashOfConfig":"12"},{"size":3253,"mtime":1607589100523,"results":"16","hashOfConfig":"12"},{"size":21209,"mtime":1607594405458,"results":"17","hashOfConfig":"12"},{"size":2575,"mtime":1607591310413,"results":"18","hashOfConfig":"12"},{"size":2249,"mtime":1607589100522,"results":"19","hashOfConfig":"12"},{"size":14160,"mtime":1607589100521,"results":"20","hashOfConfig":"12"},{"size":219,"mtime":1607589100520,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1326mtd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\index.jsx",[],["45","46"],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\reportWebVitals.js",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\App.jsx",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Workplace\\Workplace.jsx",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Employees\\Employees.jsx",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Login\\Login.jsx",["47"],"import React, {useEffect, useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Container} from '../../containers/Login'\r\nimport axios from 'axios';\r\n\r\n\r\nconst Login = () => {\r\n    //Loading data\r\n    //Control input value\r\n    const [user,setUser] = useState('');\r\n    const onChangeUser = (e) => {setUser(e.target.value)}\r\n    const [password,setPassword] = useState('');\r\n    const onChangePassword = (e) => {setPassword(e.target.value)}\r\n    // LoginButton onClick\r\n    const onClickLogin = () => {\r\n        axios.post('http://localhost:3001/login', {\r\n            user: user,\r\n            password: password\r\n        }).then(function (response) {\r\n            console.log(response.data);\r\n            (response.data.status) \r\n            ? window.location.replace('http://localhost:3000/admin123456/employees')\r\n            : window.alert(\"User or Password incorrect\");\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        }).then(function (){\r\n        })\r\n    }\r\n\r\n    //Render\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Login</h1>\r\n            \r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"User Name\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                        value={user}\r\n                        onChange={onChangeUser}\r\n                    />\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <Button \r\n                        onClick={onClickLogin}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n    \r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Login","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Menu\\Menu.jsx",[],"E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\pages\\Celendar\\Celendar.jsx",["48"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { green } from '@material-ui/core/colors';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './style.css';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '25px'\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\n\r\nconst Celendar = () => {\r\n    const classes = useStyles();\r\n\r\n    // loading data\r\n    \r\n    // filter data\r\n    const [rowsFilter, setRowsFilter] = useState([\r\n        {\r\n            id: 1,\r\n            mon: 1,\r\n            tue: 1,\r\n            wed: 0,\r\n            thu: 0,\r\n            fri: 1,\r\n            sat: 1,\r\n            sun: 0\r\n        }\r\n    ]);\r\n    // speedDial\r\n    const handleSpeedDial = () => {openDialog();}\r\n    // dialog \r\n    const [dialog, setDialog] = useState(false);\r\n    const openDialog = () => {setDialog(true)};\r\n    const closeDialog = () => {setDialog(false)};\r\n    // dialog submit\r\n    const handleDialogActionUpdate = () => {}\r\n    // update by select\r\n        //monday\r\n    const [mon, setMon] = useState(0);\r\n    const handleChangeMon = (e) => {setMon(e.target.value);};\r\n        //tuesday\r\n    const [tue, setTue] = useState(0);\r\n    const handleChangeTue = (e) => {setTue(e.target.value);};\r\n        //wed\r\n    const [wed, setWed] = useState(0);\r\n    const handleChangeWed = (e) => {setWed(e.target.value);};\r\n        //Thursday\r\n    const [thu, setThu] = useState(0);\r\n    const handleChangeThu = (e) => {setThu(e.target.value);};\r\n        // Friday\r\n    const [fri, setFri] = useState(0);\r\n    const handleChangeFri = (e) => {setFri(e.target.value);};\r\n        //saturday\r\n    const [sat, setSat] = useState(0);\r\n    const handleChangeSat = (e) => {setSat(e.target.value);};\r\n        //sunday\r\n    const [sun, setSun] = useState(0);\r\n    const handleChangeSun = (e) => {setSun(e.target.value);};\r\n    // render\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Celendar\r\n            </Typography>\r\n            {/* Searching */}\r\n            <div className={classes.container}>\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search employee by id\"\r\n                        inputProps={{ 'aria-label': 'search employee' }}\r\n                    />\r\n                    <IconButton aria-label=\"search\" className={classes.iconButton}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name's Employees</TableCell>\r\n                                <TableCell align=\"center\">Monday</TableCell>\r\n                                <TableCell align=\"center\">Tuesday</TableCell>\r\n                                <TableCell align=\"center\">Wednesday</TableCell>\r\n                                <TableCell align=\"center\">Thursday</TableCell>\r\n                                <TableCell align=\"center\">Friday</TableCell>\r\n                                <TableCell align=\"center\">Saturday</TableCell>\r\n                                <TableCell align=\"center\">Sunday</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rowsFilter.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\"> Duong Dang Khoa </TableCell>\r\n                                    {row.mon === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.tue === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.wed === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.thu === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.fri === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sat === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sun === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n            <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<EditIcon />}\r\n                    onClick={handleSpeedDial}\r\n                    className={classes.speedDial}\r\n            > \r\n            </SpeedDial>\r\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To update new calendar employee, please informations here. We will send updates\r\n                        occasionally.\r\n                    </DialogContentText>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\r\n                        <Select\r\n                            labelId=\"mon-label\"\r\n                            id=\"mon\"\r\n                            value={mon}\r\n                            onChange={handleChangeMon}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"tue-label\"\r\n                            id=\"tue\"\r\n                            value={tue}\r\n                            onChange={handleChangeTue}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"wed-label\"\r\n                            id=\"wed\"\r\n                            value={wed}\r\n                            onChange={handleChangeWed}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\r\n                        <Select\r\n                            labelId=\"thu-label\"\r\n                            id=\"thu\"\r\n                            value={thu}\r\n                            onChange={handleChangeThu}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\r\n                        <Select\r\n                            labelId=\"fri-label\"\r\n                            id=\"fri\"\r\n                            value={fri}\r\n                            onChange={handleChangeFri}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sat-label\"\r\n                            id=\"sat\"\r\n                            value={sat}\r\n                            onChange={handleChangeSat}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sun-label\"\r\n                            id=\"sun\"\r\n                            value={sun}\r\n                            onChange={handleChangeSun}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\" >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Celendar\r\n","E:\\project\\Cafe_MN\\Cafe_Manager_Official\\client\\src\\containers\\Login\\index.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":16,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":78,"column":24,"nodeType":"55","messageId":"56","endLine":78,"endColumn":37},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setRowsFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]