[{"E:\\project\\cafe_cafe\\client\\src\\index.jsx":"1","E:\\project\\cafe_cafe\\client\\src\\reportWebVitals.js":"2","E:\\project\\cafe_cafe\\client\\src\\App.jsx":"3","E:\\project\\cafe_cafe\\client\\src\\pages\\Home\\Home.jsx":"4","E:\\project\\cafe_cafe\\client\\src\\pages\\Workplace\\Workplace.jsx":"5","E:\\project\\cafe_cafe\\client\\src\\pages\\Login\\Login.jsx":"6","E:\\project\\cafe_cafe\\client\\src\\pages\\Employees\\Employees.jsx":"7","E:\\project\\cafe_cafe\\client\\src\\containers\\Login\\index.jsx":"8","E:\\project\\cafe_cafe\\client\\src\\pages\\Menu\\Menu.jsx":"9","E:\\project\\cafe_cafe\\client\\src\\pages\\Celendar\\Celendar.jsx":"10"},{"size":517,"mtime":1607433716572,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1607433716590,"results":"13","hashOfConfig":"12"},{"size":511,"mtime":1607498935150,"results":"14","hashOfConfig":"12"},{"size":649,"mtime":1607498258749,"results":"15","hashOfConfig":"12"},{"size":3253,"mtime":1607498585912,"results":"16","hashOfConfig":"12"},{"size":3256,"mtime":1607498935151,"results":"17","hashOfConfig":"12"},{"size":15609,"mtime":1607498585905,"results":"18","hashOfConfig":"12"},{"size":219,"mtime":1607433716572,"results":"19","hashOfConfig":"12"},{"size":2249,"mtime":1607498585906,"results":"20","hashOfConfig":"12"},{"size":14249,"mtime":1607498585904,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o01ja7",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},"E:\\project\\cafe_cafe\\client\\src\\index.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\reportWebVitals.js",[],"E:\\project\\cafe_cafe\\client\\src\\App.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Workplace\\Workplace.jsx",[],["46","47"],"E:\\project\\cafe_cafe\\client\\src\\pages\\Login\\Login.jsx",["48","49"],"import React, {useEffect, useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Container} from '../../containers/Login'\r\n// import axios from 'axios';\r\n\r\n\r\nconst Login = () => {\r\n    //Loading data\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        checkUser() // Fetch games when component is mounted\r\n      }, [])\r\n    //Control input value\r\n    \r\n    const [user,setUser] = useState('');\r\n    const onChangeUser = (e) => {setUser(e.target.value)}\r\n    const [password,setPassword] = useState('');\r\n    const onChangePassword = (e) => {setPassword(e.target.value)}\r\n    // LoginButton onClick\r\n\r\n    const checkUser = () => {\r\n            fetch('http://localhost:9000/login', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                user,\r\n                password \r\n              }),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((result) => setData(result))\r\n            //   .then((info) => console.log(info))\r\n              .catch((err) => console.log('error'))\r\n          \r\n    };\r\n    const handleChange = (event) => {\r\n        checkUser();\r\n        console.log(data);\r\n        // console.log(\"da nhan nut\");\r\n        try{\r\n            if(data.status === true)\r\n                // console.log(\"dang nhap thanh cong\");\r\n                window.location.replace(`http://localhost:3000/${user}${password}/employees`);\r\n        }catch(e){\r\n                window.alert(\"user/password wrong!\");\r\n        }\r\n      }\r\n\r\n    //Render\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Login</h1>\r\n                <form>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"User Name\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                        value={user}\r\n                        onChange={onChangeUser}\r\n                    />\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <Button \r\n                        onClick={handleChange}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Login","E:\\project\\cafe_cafe\\client\\src\\pages\\Employees\\Employees.jsx",["50","51","52","53","54","55","56","57"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './style.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/core/Alert';\r\n\r\n// Set style\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: 380,\r\n      position: 'fixed',\r\n      bottom: '15px',\r\n      right: '15px',\r\n      transform: 'translateZ(0px)',\r\n      flexGrow: 1,\r\n    },\r\n    speedDial: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n// Main function employees.jsx\r\nconst Employees = () => {\r\n    // Get style\r\n    const classes = useStyles();\r\n\r\n    // Hook set data for employee\r\n    const [rows, setRows] = useState([\r\n        {\r\n            id: '01',\r\n            firstname: 'John',\r\n            lastname: 'Smith',\r\n            birthdate: '12/06/2000',\r\n            adress: 'Ap day so xa thanh quoi huyen my xuyen tinh soc trang',\r\n            salarydaily: '100'\r\n        }\r\n    ]);\r\n\r\n    // Hook and function set show and hide Icon Action\r\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\r\n    const handleOpenSpeedDial = () => {\r\n        setOpenSpeedDial(true);\r\n      };\r\n    \r\n      const handleCloseSpeedDial = () => {\r\n        setOpenSpeedDial(false);\r\n      };\r\n\r\n    // Set action for Icon Action\r\n      //action Add an employee\r\n    const actionAdd = () => {\r\n        handleClickOpenDialogAdd();\r\n    };\r\n\r\n    \r\n    // Hook and function set show and hide Dialog from Action add an employee\r\n    const [openDialogAdd, setOpenDialogAdd] = useState(false);\r\n    const handleClickOpenDialogAdd = () => {\r\n        setOpenDialogAdd(true);\r\n      };\r\n    \r\n    const handleCloseDialogAdd = () => {\r\n        setOpenDialogAdd(false);\r\n      };\r\n    // control input value DialogAdd\r\n      // First name\r\n    const [firstName, setFirstName] = useState('');\r\n    const onChangeFirstName = (e) => {setFirstName(e.target.value);};\r\n      // Last name\r\n    const [lastName, setLastName] = useState('');\r\n    const onChangeLastName = (e) => {setLastName(e.target.value);};\r\n      // Birth date\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const onChangeBirthDate = (e) => {setBirthDate(e.target.value);};\r\n      // Adress\r\n    const [address, setAddress] = useState('');\r\n    const onChangeAddress = (e) => {setAddress(e.target.value);};\r\n      // Salary\r\n    const [salaryDaily, setSalaryDaily] = useState('');\r\n    const onChangeSalaryDaily = (e) => {setSalaryDaily(e.target.value);};\r\n    \r\n    // Contraint input value Dialog add\r\n    const checkFirstName = () => {return firstName === '' ? true : false}\r\n    const checkLastName = () => {return lastName === '' ? true : false}\r\n    const checkBirthdate = () => {return birthDate === '' ? true : false}\r\n    const checkAddress = () => {return address === '' ? true : false}\r\n    const checkSalaryDaily = () => {return salaryDaily === '' ? true : false}\r\n    const checkForm = () => {return (checkFirstName && checkLastName) && checkBirthdate && checkAddress && checkSalaryDaily ? true : false}\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Employees\r\n            </Typography>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Index</TableCell>\r\n                                <TableCell align=\"center\">First Name</TableCell>\r\n                                <TableCell align=\"center\">Last Name</TableCell>\r\n                                <TableCell align=\"center\">Birth Date</TableCell>\r\n                                <TableCell align=\"center\">Adress</TableCell>\r\n                                <TableCell align=\"center\">Salary Daily ($)</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\r\n                                    <TableCell align=\"center\">{row.firstname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.lastname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.birthdate}</TableCell>\r\n                                    <TableCell align=\"center\">{row.adress}</TableCell>\r\n                                    <TableCell align=\"center\">{row.salarydaily}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n            {/* Action icon */}\r\n            <div className={classes.root}>\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<SpeedDialIcon />}\r\n                    onClose={handleCloseSpeedDial}\r\n                    onOpen={handleOpenSpeedDial}\r\n                    open={openSpeedDial}\r\n                    className={classes.speedDial}\r\n                >\r\n            {/* Action add */}\r\n                <SpeedDialAction\r\n                    key={`Add new employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`Add new employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action delete */}\r\n                <SpeedDialAction\r\n                    key={`delete an employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`delete an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action update */}\r\n                <SpeedDialAction\r\n                    key={`update an employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`update an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action search */}\r\n                <SpeedDialAction\r\n                    key={`Search`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`Search`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                </SpeedDial>\r\n            {/* Dialog add an employee */}\r\n            </div>\r\n            <Dialog open={openDialogAdd} onClose={handleCloseDialogAdd} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add an employee</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    To add new employee to this website, please informations here. We will send updates\r\n                    occasionally.\r\n                </DialogContentText>\r\n                <TextField\r\n                    onChange={onChangeFirstName}\r\n                    required\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    id=\"birthDate\"\r\n                    margin=\"dense\"\r\n                    label=\"Birth date\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"address\"\r\n                    label=\"Address\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"salaryDaily\"\r\n                    label=\"Salary Daily\"\r\n                    fullWidth\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleCloseDialogAdd} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Alert check form is empty? */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employees\r\n","E:\\project\\cafe_cafe\\client\\src\\containers\\Login\\index.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Menu\\Menu.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Celendar\\Celendar.jsx",["58","59","60","61"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { green } from '@material-ui/core/colors';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './style.css';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '25px'\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\n\r\nconst Celendar = () => {\r\n    const classes = useStyles();\r\n\r\n    // loading data\r\n    const [rows, setRows] = useState([]);\r\n    // filter data\r\n    const [rowsFilter, setRowsFilter] = useState([\r\n        {\r\n            id: 1,\r\n            mon: 1,\r\n            tue: 1,\r\n            wed: 0,\r\n            thu: 0,\r\n            fri: 1,\r\n            sat: 1,\r\n            sun: 0\r\n        }\r\n    ]);\r\n    // speedDial\r\n    const handleSpeedDial = () => {openDialog();}\r\n    // dialog \r\n    const [dialog, setDialog] = useState(false);\r\n    const openDialog = () => {setDialog(true)};\r\n    const closeDialog = () => {setDialog(false)};\r\n    // dialog submit\r\n    const handleDialogActionUpdate = () => {}\r\n    // update by select\r\n        //monday\r\n    const [mon, setMon] = useState(0);\r\n    const handleChangeMon = (e) => {setMon(e.target.value);};\r\n        //tuesday\r\n    const [tue, setTue] = useState(0);\r\n    const handleChangeTue = (e) => {setTue(e.target.value);};\r\n        //wed\r\n    const [wed, setWed] = useState(0);\r\n    const handleChangeWed = (e) => {setWed(e.target.value);};\r\n        //Thursday\r\n    const [thu, setThu] = useState(0);\r\n    const handleChangeThu = (e) => {setThu(e.target.value);};\r\n        // Friday\r\n    const [fri, setFri] = useState(0);\r\n    const handleChangeFri = (e) => {setFri(e.target.value);};\r\n        //saturday\r\n    const [sat, setSat] = useState(0);\r\n    const handleChangeSat = (e) => {setSat(e.target.value);};\r\n        //sunday\r\n    const [sun, setSun] = useState(0);\r\n    const handleChangeSun = (e) => {setSun(e.target.value);};\r\n    // render\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Celendar\r\n            </Typography>\r\n            {/* Searching */}\r\n            <div className={classes.container}>\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search employee by id\"\r\n                        inputProps={{ 'aria-label': 'search employee' }}\r\n                    />\r\n                    <IconButton aria-label=\"search\" className={classes.iconButton}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name's Employees</TableCell>\r\n                                <TableCell align=\"center\">Monday</TableCell>\r\n                                <TableCell align=\"center\">Tuesday</TableCell>\r\n                                <TableCell align=\"center\">Wednesday</TableCell>\r\n                                <TableCell align=\"center\">Thursday</TableCell>\r\n                                <TableCell align=\"center\">Friday</TableCell>\r\n                                <TableCell align=\"center\">Saturday</TableCell>\r\n                                <TableCell align=\"center\">Sunday</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rowsFilter.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\"> Duong Dang Khoa </TableCell>\r\n                                    {row.mon === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.tue === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.wed === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.thu === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.fri === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sat === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sun === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n            <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<EditIcon />}\r\n                    onClick={handleSpeedDial}\r\n                    className={classes.speedDial}\r\n            > \r\n            </SpeedDial>\r\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To update new calendar employee, please informations here. We will send updates\r\n                        occasionally.\r\n                    </DialogContentText>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\r\n                        <Select\r\n                            labelId=\"mon-label\"\r\n                            id=\"mon\"\r\n                            value={mon}\r\n                            onChange={handleChangeMon}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"tue-label\"\r\n                            id=\"tue\"\r\n                            value={tue}\r\n                            onChange={handleChangeTue}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"wed-label\"\r\n                            id=\"wed\"\r\n                            value={wed}\r\n                            onChange={handleChangeWed}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\r\n                        <Select\r\n                            labelId=\"thu-label\"\r\n                            id=\"thu\"\r\n                            value={thu}\r\n                            onChange={handleChangeThu}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\r\n                        <Select\r\n                            labelId=\"fri-label\"\r\n                            id=\"fri\"\r\n                            value={fri}\r\n                            onChange={handleChangeFri}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sat-label\"\r\n                            id=\"sat\"\r\n                            value={sat}\r\n                            onChange={handleChangeSat}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sun-label\"\r\n                            id=\"sun\"\r\n                            value={sun}\r\n                            onChange={handleChangeSun}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\" >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Celendar\r\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":13,"column":10,"nodeType":"68","endLine":13,"endColumn":12,"suggestions":"69"},{"ruleId":"70","severity":2,"message":"71","line":37,"column":7,"nodeType":"72","messageId":"73","endLine":37,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":50,"column":18,"nodeType":"72","messageId":"76","endLine":50,"endColumn":25},{"ruleId":"74","severity":1,"message":"77","line":117,"column":12,"nodeType":"72","messageId":"76","endLine":117,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":120,"column":12,"nodeType":"72","messageId":"76","endLine":120,"endColumn":20},{"ruleId":"74","severity":1,"message":"79","line":123,"column":12,"nodeType":"72","messageId":"76","endLine":123,"endColumn":21},{"ruleId":"74","severity":1,"message":"80","line":126,"column":12,"nodeType":"72","messageId":"76","endLine":126,"endColumn":19},{"ruleId":"74","severity":1,"message":"81","line":129,"column":12,"nodeType":"72","messageId":"76","endLine":129,"endColumn":23},{"ruleId":"74","severity":1,"message":"82","line":132,"column":12,"nodeType":"72","messageId":"76","endLine":132,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":133,"column":11,"nodeType":"72","messageId":"76","endLine":133,"endColumn":21},{"ruleId":"74","severity":1,"message":"84","line":26,"column":8,"nodeType":"72","messageId":"76","endLine":26,"endColumn":17},{"ruleId":"74","severity":1,"message":"85","line":76,"column":12,"nodeType":"72","messageId":"76","endLine":76,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":76,"column":18,"nodeType":"72","messageId":"76","endLine":76,"endColumn":25},{"ruleId":"74","severity":1,"message":"86","line":78,"column":24,"nodeType":"72","messageId":"76","endLine":78,"endColumn":37},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-undef","'preventdefault' is not defined.","Identifier","undef","no-unused-vars","'setRows' is assigned a value but never used.","unusedVar","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'birthDate' is assigned a value but never used.","'address' is assigned a value but never used.","'salaryDaily' is assigned a value but never used.","'id' is assigned a value but never used.","'onchangeId' is assigned a value but never used.","'TextField' is defined but never used.","'rows' is assigned a value but never used.","'setRowsFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [checkUser]",{"range":"92","text":"93"},[415,417],"[checkUser]"]