[{"E:\\project\\cafe_cafe\\client\\src\\index.jsx":"1","E:\\project\\cafe_cafe\\client\\src\\reportWebVitals.js":"2","E:\\project\\cafe_cafe\\client\\src\\App.jsx":"3","E:\\project\\cafe_cafe\\client\\src\\pages\\Home\\Home.jsx":"4","E:\\project\\cafe_cafe\\client\\src\\pages\\Workplace\\Workplace.jsx":"5","E:\\project\\cafe_cafe\\client\\src\\pages\\Login\\Login.jsx":"6","E:\\project\\cafe_cafe\\client\\src\\pages\\Employees\\Employees.jsx":"7","E:\\project\\cafe_cafe\\client\\src\\containers\\Login\\index.jsx":"8","E:\\project\\cafe_cafe\\client\\src\\pages\\Menu\\Menu.jsx":"9","E:\\project\\cafe_cafe\\client\\src\\pages\\Celendar\\Celendar.jsx":"10","E:\\project\\official_\\client\\src\\index.jsx":"11","E:\\project\\official_\\client\\src\\reportWebVitals.js":"12","E:\\project\\official_\\client\\src\\App.jsx":"13","E:\\project\\official_\\client\\src\\pages\\Workplace\\Workplace.jsx":"14","E:\\project\\official_\\client\\src\\pages\\Home\\Home.jsx":"15","E:\\project\\official_\\client\\src\\pages\\Employees\\Employees.jsx":"16","E:\\project\\official_\\client\\src\\pages\\Celendar\\Celendar.jsx":"17","E:\\project\\official_\\client\\src\\pages\\Menu\\Menu.jsx":"18","E:\\project\\official_\\client\\src\\pages\\Login\\Login.jsx":"19","E:\\project\\official_\\client\\src\\containers\\Login\\index.jsx":"20"},{"size":517,"mtime":1607433716572,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1607433716590,"results":"23","hashOfConfig":"22"},{"size":511,"mtime":1607498935150,"results":"24","hashOfConfig":"22"},{"size":649,"mtime":1607498258749,"results":"25","hashOfConfig":"22"},{"size":3253,"mtime":1607498585912,"results":"26","hashOfConfig":"22"},{"size":3256,"mtime":1607498935151,"results":"27","hashOfConfig":"22"},{"size":15609,"mtime":1607498585905,"results":"28","hashOfConfig":"22"},{"size":219,"mtime":1607433716572,"results":"29","hashOfConfig":"22"},{"size":2249,"mtime":1607498585906,"results":"30","hashOfConfig":"22"},{"size":14249,"mtime":1607498585904,"results":"31","hashOfConfig":"22"},{"size":517,"mtime":1607433716572,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1607433716590,"results":"34","hashOfConfig":"33"},{"size":511,"mtime":1607588086435,"results":"35","hashOfConfig":"33"},{"size":3253,"mtime":1607498585912,"results":"36","hashOfConfig":"33"},{"size":649,"mtime":1607498258749,"results":"37","hashOfConfig":"33"},{"size":15609,"mtime":1607588086435,"results":"38","hashOfConfig":"33"},{"size":14249,"mtime":1607588086435,"results":"39","hashOfConfig":"33"},{"size":2249,"mtime":1607498585906,"results":"40","hashOfConfig":"33"},{"size":3256,"mtime":1607588086436,"results":"41","hashOfConfig":"33"},{"size":219,"mtime":1607433716572,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o01ja7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1yqww0u",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":4,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"E:\\project\\cafe_cafe\\client\\src\\index.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\reportWebVitals.js",[],"E:\\project\\cafe_cafe\\client\\src\\App.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Workplace\\Workplace.jsx",[],["91","92"],"E:\\project\\cafe_cafe\\client\\src\\pages\\Login\\Login.jsx",["93","94"],"import React, {useEffect, useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Container} from '../../containers/Login'\r\n// import axios from 'axios';\r\n\r\n\r\nconst Login = () => {\r\n    //Loading data\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        checkUser() // Fetch games when component is mounted\r\n      }, [])\r\n    //Control input value\r\n    \r\n    const [user,setUser] = useState('');\r\n    const onChangeUser = (e) => {setUser(e.target.value)}\r\n    const [password,setPassword] = useState('');\r\n    const onChangePassword = (e) => {setPassword(e.target.value)}\r\n    // LoginButton onClick\r\n\r\n    const checkUser = () => {\r\n            fetch('http://localhost:9000/login', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                user,\r\n                password \r\n              }),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((result) => setData(result))\r\n            //   .then((info) => console.log(info))\r\n              .catch((err) => console.log('error'))\r\n          \r\n    };\r\n    const handleChange = (event) => {\r\n        checkUser();\r\n        console.log(data);\r\n        // console.log(\"da nhan nut\");\r\n        try{\r\n            if(data.status === true)\r\n                // console.log(\"dang nhap thanh cong\");\r\n                window.location.replace(`http://localhost:3000/${user}${password}/employees`);\r\n        }catch(e){\r\n                window.alert(\"user/password wrong!\");\r\n        }\r\n      }\r\n\r\n    //Render\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Login</h1>\r\n                <form>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"User Name\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                        value={user}\r\n                        onChange={onChangeUser}\r\n                    />\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <Button \r\n                        onClick={handleChange}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Login","E:\\project\\cafe_cafe\\client\\src\\pages\\Employees\\Employees.jsx",["95","96","97","98","99","100","101","102"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './style.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Alert from '@material-ui/core/Alert';\r\n\r\n// Set style\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: 380,\r\n      position: 'fixed',\r\n      bottom: '15px',\r\n      right: '15px',\r\n      transform: 'translateZ(0px)',\r\n      flexGrow: 1,\r\n    },\r\n    speedDial: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n// Main function employees.jsx\r\nconst Employees = () => {\r\n    // Get style\r\n    const classes = useStyles();\r\n\r\n    // Hook set data for employee\r\n    const [rows, setRows] = useState([\r\n        {\r\n            id: '01',\r\n            firstname: 'John',\r\n            lastname: 'Smith',\r\n            birthdate: '12/06/2000',\r\n            adress: 'Ap day so xa thanh quoi huyen my xuyen tinh soc trang',\r\n            salarydaily: '100'\r\n        }\r\n    ]);\r\n\r\n    // Hook and function set show and hide Icon Action\r\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\r\n    const handleOpenSpeedDial = () => {\r\n        setOpenSpeedDial(true);\r\n      };\r\n    \r\n      const handleCloseSpeedDial = () => {\r\n        setOpenSpeedDial(false);\r\n      };\r\n\r\n    // Set action for Icon Action\r\n      //action Add an employee\r\n    const actionAdd = () => {\r\n        handleClickOpenDialogAdd();\r\n    };\r\n\r\n    \r\n    // Hook and function set show and hide Dialog from Action add an employee\r\n    const [openDialogAdd, setOpenDialogAdd] = useState(false);\r\n    const handleClickOpenDialogAdd = () => {\r\n        setOpenDialogAdd(true);\r\n      };\r\n    \r\n    const handleCloseDialogAdd = () => {\r\n        setOpenDialogAdd(false);\r\n      };\r\n    // control input value DialogAdd\r\n      // First name\r\n    const [firstName, setFirstName] = useState('');\r\n    const onChangeFirstName = (e) => {setFirstName(e.target.value);};\r\n      // Last name\r\n    const [lastName, setLastName] = useState('');\r\n    const onChangeLastName = (e) => {setLastName(e.target.value);};\r\n      // Birth date\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const onChangeBirthDate = (e) => {setBirthDate(e.target.value);};\r\n      // Adress\r\n    const [address, setAddress] = useState('');\r\n    const onChangeAddress = (e) => {setAddress(e.target.value);};\r\n      // Salary\r\n    const [salaryDaily, setSalaryDaily] = useState('');\r\n    const onChangeSalaryDaily = (e) => {setSalaryDaily(e.target.value);};\r\n    \r\n    // Contraint input value Dialog add\r\n    const checkFirstName = () => {return firstName === '' ? true : false}\r\n    const checkLastName = () => {return lastName === '' ? true : false}\r\n    const checkBirthdate = () => {return birthDate === '' ? true : false}\r\n    const checkAddress = () => {return address === '' ? true : false}\r\n    const checkSalaryDaily = () => {return salaryDaily === '' ? true : false}\r\n    const checkForm = () => {return (checkFirstName && checkLastName) && checkBirthdate && checkAddress && checkSalaryDaily ? true : false}\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Employees\r\n            </Typography>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Index</TableCell>\r\n                                <TableCell align=\"center\">First Name</TableCell>\r\n                                <TableCell align=\"center\">Last Name</TableCell>\r\n                                <TableCell align=\"center\">Birth Date</TableCell>\r\n                                <TableCell align=\"center\">Adress</TableCell>\r\n                                <TableCell align=\"center\">Salary Daily ($)</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\r\n                                    <TableCell align=\"center\">{row.firstname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.lastname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.birthdate}</TableCell>\r\n                                    <TableCell align=\"center\">{row.adress}</TableCell>\r\n                                    <TableCell align=\"center\">{row.salarydaily}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n            {/* Action icon */}\r\n            <div className={classes.root}>\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<SpeedDialIcon />}\r\n                    onClose={handleCloseSpeedDial}\r\n                    onOpen={handleOpenSpeedDial}\r\n                    open={openSpeedDial}\r\n                    className={classes.speedDial}\r\n                >\r\n            {/* Action add */}\r\n                <SpeedDialAction\r\n                    key={`Add new employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`Add new employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action delete */}\r\n                <SpeedDialAction\r\n                    key={`delete an employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`delete an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action update */}\r\n                <SpeedDialAction\r\n                    key={`update an employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`update an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action search */}\r\n                <SpeedDialAction\r\n                    key={`Search`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`Search`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                </SpeedDial>\r\n            {/* Dialog add an employee */}\r\n            </div>\r\n            <Dialog open={openDialogAdd} onClose={handleCloseDialogAdd} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add an employee</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    To add new employee to this website, please informations here. We will send updates\r\n                    occasionally.\r\n                </DialogContentText>\r\n                <TextField\r\n                    onChange={onChangeFirstName}\r\n                    required\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    id=\"birthDate\"\r\n                    margin=\"dense\"\r\n                    label=\"Birth date\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                    shrink: true,\r\n                    }}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"address\"\r\n                    label=\"Address\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    required\r\n                    margin=\"dense\"\r\n                    id=\"salaryDaily\"\r\n                    label=\"Salary Daily\"\r\n                    fullWidth\r\n                />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleCloseDialogAdd} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Alert check form is empty? */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employees\r\n","E:\\project\\cafe_cafe\\client\\src\\containers\\Login\\index.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Menu\\Menu.jsx",[],"E:\\project\\cafe_cafe\\client\\src\\pages\\Celendar\\Celendar.jsx",["103","104","105","106"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { green } from '@material-ui/core/colors';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './style.css';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4,\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '25px'\r\n    },\r\n    speedDial: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\n\r\nconst Celendar = () => {\r\n    const classes = useStyles();\r\n\r\n    // loading data\r\n    const [rows, setRows] = useState([]);\r\n    // filter data\r\n    const [rowsFilter, setRowsFilter] = useState([\r\n        {\r\n            id: 1,\r\n            mon: 1,\r\n            tue: 1,\r\n            wed: 0,\r\n            thu: 0,\r\n            fri: 1,\r\n            sat: 1,\r\n            sun: 0\r\n        }\r\n    ]);\r\n    // speedDial\r\n    const handleSpeedDial = () => {openDialog();}\r\n    // dialog \r\n    const [dialog, setDialog] = useState(false);\r\n    const openDialog = () => {setDialog(true)};\r\n    const closeDialog = () => {setDialog(false)};\r\n    // dialog submit\r\n    const handleDialogActionUpdate = () => {}\r\n    // update by select\r\n        //monday\r\n    const [mon, setMon] = useState(0);\r\n    const handleChangeMon = (e) => {setMon(e.target.value);};\r\n        //tuesday\r\n    const [tue, setTue] = useState(0);\r\n    const handleChangeTue = (e) => {setTue(e.target.value);};\r\n        //wed\r\n    const [wed, setWed] = useState(0);\r\n    const handleChangeWed = (e) => {setWed(e.target.value);};\r\n        //Thursday\r\n    const [thu, setThu] = useState(0);\r\n    const handleChangeThu = (e) => {setThu(e.target.value);};\r\n        // Friday\r\n    const [fri, setFri] = useState(0);\r\n    const handleChangeFri = (e) => {setFri(e.target.value);};\r\n        //saturday\r\n    const [sat, setSat] = useState(0);\r\n    const handleChangeSat = (e) => {setSat(e.target.value);};\r\n        //sunday\r\n    const [sun, setSun] = useState(0);\r\n    const handleChangeSun = (e) => {setSun(e.target.value);};\r\n    // render\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Celendar\r\n            </Typography>\r\n            {/* Searching */}\r\n            <div className={classes.container}>\r\n                <Paper component=\"form\" className={classes.root}>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search employee by id\"\r\n                        inputProps={{ 'aria-label': 'search employee' }}\r\n                    />\r\n                    <IconButton aria-label=\"search\" className={classes.iconButton}>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </div>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name's Employees</TableCell>\r\n                                <TableCell align=\"center\">Monday</TableCell>\r\n                                <TableCell align=\"center\">Tuesday</TableCell>\r\n                                <TableCell align=\"center\">Wednesday</TableCell>\r\n                                <TableCell align=\"center\">Thursday</TableCell>\r\n                                <TableCell align=\"center\">Friday</TableCell>\r\n                                <TableCell align=\"center\">Saturday</TableCell>\r\n                                <TableCell align=\"center\">Sunday</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rowsFilter.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\"> Duong Dang Khoa </TableCell>\r\n                                    {row.mon === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.tue === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.wed === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.thu === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.fri === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sat === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                    {row.sun === 1 \r\n                                        ?\r\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\r\n                                        :\r\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\r\n                                    }\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n            <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<EditIcon />}\r\n                    onClick={handleSpeedDial}\r\n                    className={classes.speedDial}\r\n            > \r\n            </SpeedDial>\r\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To update new calendar employee, please informations here. We will send updates\r\n                        occasionally.\r\n                    </DialogContentText>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\r\n                        <Select\r\n                            labelId=\"mon-label\"\r\n                            id=\"mon\"\r\n                            value={mon}\r\n                            onChange={handleChangeMon}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"tue-label\"\r\n                            id=\"tue\"\r\n                            value={tue}\r\n                            onChange={handleChangeTue}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\r\n                        <Select\r\n                            labelId=\"wed-label\"\r\n                            id=\"wed\"\r\n                            value={wed}\r\n                            onChange={handleChangeWed}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\r\n                        <Select\r\n                            labelId=\"thu-label\"\r\n                            id=\"thu\"\r\n                            value={thu}\r\n                            onChange={handleChangeThu}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\r\n                        <Select\r\n                            labelId=\"fri-label\"\r\n                            id=\"fri\"\r\n                            value={fri}\r\n                            onChange={handleChangeFri}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sat-label\"\r\n                            id=\"sat\"\r\n                            value={sat}\r\n                            onChange={handleChangeSat}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\r\n                        <Select\r\n                            labelId=\"sun-label\"\r\n                            id=\"sun\"\r\n                            value={sun}\r\n                            onChange={handleChangeSun}\r\n                        >\r\n                            <MenuItem value={1}>Yes</MenuItem>\r\n                            <MenuItem value={0}>No</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDialog} color=\"primary\" >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Celendar\r\n","E:\\project\\official_\\client\\src\\index.jsx",[],["107","108"],"E:\\project\\official_\\client\\src\\reportWebVitals.js",[],"E:\\project\\official_\\client\\src\\App.jsx",[],"E:\\project\\official_\\client\\src\\pages\\Workplace\\Workplace.jsx",[],"E:\\project\\official_\\client\\src\\pages\\Home\\Home.jsx",[],"E:\\project\\official_\\client\\src\\pages\\Employees\\Employees.jsx",["109","110","111","112","113","114","115","116"],"import React, { useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n// import Alert from '@material-ui/core/Alert';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport './style.css'\r\n// Set style for icon action\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      height: 380,\r\n      position: 'fixed',\r\n      bottom: '15px',\r\n      right: '15px',\r\n      transform: 'translateZ(0px)',\r\n      flexGrow: 1,\r\n    },\r\n    speedDial: {\r\n      position: 'absolute',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n// Main function employees.jsx\r\nconst Employees = () => {\r\n    // Get style\r\n    const classes = useStyles();\r\n\r\n    // Hook set data for employee\r\n    const [rows, setRows] = useState([\r\n        {\r\n            id: '01',\r\n            firstname: 'John',\r\n            lastname: 'Smith',\r\n            birthdate: '12/06/2000',\r\n            adress: 'Ap day so xa thanh quoi huyen my xuyen tinh soc trang',\r\n            salarydaily: '100'\r\n        }\r\n    ]);\r\n\r\n    // Hook and function set show and hide Icon Action\r\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\r\n    const handleOpenSpeedDial = () => {\r\n        setOpenSpeedDial(true);\r\n      };\r\n    \r\n      const handleCloseSpeedDial = () => {\r\n        setOpenSpeedDial(false);\r\n      };\r\n\r\n    // Set action for Icon Action\r\n      //action Add an employee\r\n    const actionAdd = () => {\r\n        handleClickOpenDialogAdd();\r\n    };\r\n     //action delete employee\r\n     const actionDelete = () => {\r\n        handleClickOpenDialogDelete();\r\n    };\r\n     //action update employee\r\n     const actionUpdate = () => {\r\n        handleClickOpenDialogUpdate();\r\n    };\r\n\r\n    // Dialog of Action add\r\n    const [openDialogAdd, setOpenDialogAdd] = useState(false);\r\n    const handleClickOpenDialogAdd = () => {\r\n        setOpenDialogAdd(true);\r\n      };\r\n    \r\n    const handleCloseDialogAdd = () => {\r\n        setOpenDialogAdd(false);\r\n      };\r\n\r\n    // Dialog of Action delete\r\n    const [openDialogDelete, setOpenDialogDelete] = useState(false);\r\n    const handleClickOpenDialogDelete = () => {\r\n        setOpenDialogDelete(true);\r\n      };\r\n    \r\n    const handleCloseDialogDelete = () => {\r\n        setOpenDialogDelete(false);\r\n      };\r\n\r\n    // Dialog of Action update\r\n    const [openDialogUpdate, setOpenDialogUpdate] = useState(false);\r\n    const handleClickOpenDialogUpdate = () => {\r\n        setOpenDialogUpdate(true);\r\n      };\r\n    \r\n    const handleCloseDialogUpdate = () => {\r\n        setOpenDialogUpdate(false);\r\n      };\r\n\r\n    // control input value DialogAdd\r\n      // First name\r\n    const [firstName, setFirstName] = useState('');\r\n    const onChangeFirstName = (e) => {setFirstName(e.target.value);};\r\n      // Last name\r\n    const [lastName, setLastName] = useState('');\r\n    const onChangeLastName = (e) => {setLastName(e.target.value);};\r\n      // Birth date\r\n    const [birthDate, setBirthDate] = useState('');\r\n    const onChangeBirthDate = (e) => {setBirthDate(e.target.value);};\r\n      // Adress\r\n    const [address, setAddress] = useState('');\r\n    const onChangeAddress = (e) => {setAddress(e.target.value);};\r\n      // Salary\r\n    const [salaryDaily, setSalaryDaily] = useState('');\r\n    const onChangeSalaryDaily = (e) => {setSalaryDaily(e.target.value);};\r\n      // ID\r\n    const [id, setId] = useState('');\r\n    const onchangeId = (e) => {setId(e.target.value);};\r\n    \r\n   // Onclick submit action \r\n      // Add event\r\n    const handleActionAdd = () => {window.alert(\"add\")}\r\n      // Delete event\r\n    const handleActionDelete = () => {window.alert(\"delete\")}\r\n      // Update event\r\n    const handleActionUpdate = () => {window.alert(\"update\")}\r\n\r\n    // render\r\n    return (\r\n        <>\r\n            {/* Title Employees */}\r\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\r\n                Employees\r\n            </Typography>\r\n            {/* Table show employees */}\r\n            <form>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\" >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"center\">Index</TableCell>\r\n                                <TableCell align=\"center\">First Name</TableCell>\r\n                                <TableCell align=\"center\">Last Name</TableCell>\r\n                                <TableCell align=\"center\">Birth Date</TableCell>\r\n                                <TableCell align=\"center\">Adress</TableCell>\r\n                                <TableCell align=\"center\">Salary Daily ($)</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        {/* Render element to table from Employees Table (mysql)*/}\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell align=\"center\">{row.id}</TableCell>\r\n                                    <TableCell align=\"center\">{row.firstname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.lastname}</TableCell>\r\n                                    <TableCell align=\"center\">{row.birthdate}</TableCell>\r\n                                    <TableCell align=\"center\">{row.adress}</TableCell>\r\n                                    <TableCell align=\"center\">{row.salarydaily}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </form>\r\n\r\n            {/* Action icon */}\r\n            <div className={classes.root}>\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial tooltip example\"\r\n                    icon={<SpeedDialIcon />}\r\n                    onClose={handleCloseSpeedDial}\r\n                    onOpen={handleOpenSpeedDial}\r\n                    open={openSpeedDial}\r\n                    className={classes.speedDial}\r\n                >\r\n            {/* Action add */}\r\n                <SpeedDialAction\r\n                    key={`Add new employee`}\r\n                    icon={<PlusOneIcon />}\r\n                    tooltipTitle={`Add new employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionAdd();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action delete */}\r\n                <SpeedDialAction\r\n                    key={`Delete an employee`}\r\n                    icon={<DeleteForeverIcon />}\r\n                    tooltipTitle={`Delete an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionDelete();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                {/* Action update */}\r\n                <SpeedDialAction\r\n                    key={`Update an employee`}\r\n                    icon={<UpdateIcon />}\r\n                    tooltipTitle={`Update an employee`}\r\n                    tooltipOpen\r\n                    onClick={() => {\r\n                        actionUpdate();\r\n                        handleCloseSpeedDial();\r\n                    }}\r\n                />\r\n                </SpeedDial>\r\n            </div>\r\n            {/* Dialog add an employee */}\r\n            <Dialog open={openDialogAdd} onClose={handleCloseDialogAdd} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Add an employee</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText>\r\n                    To add new employee to this website, please informations here. We will send updates\r\n                    occasionally.\r\n                </DialogContentText>\r\n                        <TextField\r\n                            onChange={onChangeFirstName}\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={onChangeLastName}\r\n                            margin=\"dense\"\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={onChangeBirthDate}\r\n                            required\r\n                            id=\"birthDate\"\r\n                            margin=\"dense\"\r\n                            label=\"Birth date\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={onChangeAddress}\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"address\"\r\n                            label=\"Address\"\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            onChange={onChangeSalaryDaily}\r\n                            required\r\n                            margin=\"dense\"\r\n                            id=\"salaryDaily\"\r\n                            label=\"Salary Daily\"\r\n                            fullWidth\r\n                        />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialogAdd} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleActionAdd}>\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Alert check form is empty? */}\r\n\r\n            {/* Dialog delete an employee */}\r\n            <Dialog open={openDialogDelete} onClose={handleCloseDialogDelete} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Delete an employee</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To delete an employee, please informations here. We will send updates\r\n                        occasionally.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        // onChange={onChangeFirstName}\r\n                        required\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"id\"\r\n                        label=\"ID\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialogDelete} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleActionDelete}>\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Alert check form is empty? */}\r\n\r\n            {/* Dialog add an employee */}\r\n            <Dialog open={openDialogUpdate} onClose={handleCloseDialogUpdate} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update an employee</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To update new employee, please informations here. We will send updates\r\n                        occasionally.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                            // onChange={onChangeFirstName}\r\n                            required\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"id\"\r\n                            label=\"ID\"\r\n                            fullWidth\r\n                        />\r\n                    <TextField\r\n                        onChange={onChangeFirstName}\r\n                        required\r\n                        margin=\"dense\"\r\n                        id=\"firstName\"\r\n                        label=\"First Name\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={onChangeLastName}\r\n                        margin=\"dense\"\r\n                        id=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={onChangeBirthDate}\r\n                        required\r\n                        id=\"birthDate\"\r\n                        margin=\"dense\"\r\n                        label=\"Birth date\"\r\n                        type=\"date\"\r\n                        InputLabelProps={{\r\n                        shrink: true,\r\n                        }}\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={onChangeAddress}\r\n                        required\r\n                        margin=\"dense\"\r\n                        id=\"address\"\r\n                        label=\"Address\"\r\n                        fullWidth\r\n                    />\r\n                    <TextField\r\n                        onChange={onChangeSalaryDaily}\r\n                        required\r\n                        margin=\"dense\"\r\n                        id=\"salaryDaily\"\r\n                        label=\"Salary Daily\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDialogUpdate} color=\"primary\" >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" onClick={handleActionUpdate}> \r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/* Alert check form is empty? */}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Employees\r\n",["117","118"],"E:\\project\\official_\\client\\src\\pages\\Celendar\\Celendar.jsx",["119","120","121","122"],"E:\\project\\official_\\client\\src\\pages\\Menu\\Menu.jsx",[],"E:\\project\\official_\\client\\src\\pages\\Login\\Login.jsx",["123","124","125","126","127","128","129"],"import React, {useEffect, useState} from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {Container} from '../../containers/Login'\r\nimport axios from 'axios';\r\n\r\n\r\nconst Login = () => {\r\n    //Loading data\r\n    //Control input value\r\n    const [user,setUser] = useState('');\r\n    const onChangeUser = (e) => {setUser(e.target.value)}\r\n    const [password,setPassword] = useState('');\r\n    const onChangePassword = (e) => {setPassword(e.target.value)}\r\n    // LoginButton onClick\r\n    const checkUser = () => {\r\n            fetch('http://localhost:9000/login', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                user,\r\n                password \r\n              }),\r\n            })\r\n              .then((res) => res.json())\r\n              .then((result) => setData(result))\r\n            //   .then((info) => console.log(info))\r\n              .catch((err) => console.log('error'))\r\n    };\r\n    const handleChange = (event) => {\r\n      // preventdefault(); \r\n        checkUser();\r\n        console.log(data);\r\n        // console.log(\"da nhan nut\");\r\n        try{\r\n            if(data.status === true)\r\n                // console.log(\"dang nhap thanh cong\");\r\n                 console.log('chao than');\r\n                // window.location.replace(`http://localhost:3000/${user}${password}/employees`);\r\n        }catch(e){\r\n                window.alert(\"user/password wrong!\");\r\n        }\r\n      }\r\n\r\n    //Render\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h1>Login</h1>\r\n                <form>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"user\"\r\n                        label=\"User Name\"\r\n                        name=\"user\"\r\n                        autoComplete=\"user\"\r\n                        autoFocus\r\n                        value={user}\r\n                        onChange={onChangeUser}\r\n                    />\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <Button \r\n                        onClick={onClickLogin}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Log in \r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Login","E:\\project\\official_\\client\\src\\containers\\Login\\index.jsx",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":13,"column":10,"nodeType":"136","endLine":13,"endColumn":12,"suggestions":"137"},{"ruleId":"138","severity":2,"message":"139","line":37,"column":7,"nodeType":"140","messageId":"141","endLine":37,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":50,"column":18,"nodeType":"140","messageId":"144","endLine":50,"endColumn":25},{"ruleId":"142","severity":1,"message":"145","line":117,"column":12,"nodeType":"140","messageId":"144","endLine":117,"endColumn":21},{"ruleId":"142","severity":1,"message":"146","line":120,"column":12,"nodeType":"140","messageId":"144","endLine":120,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":123,"column":12,"nodeType":"140","messageId":"144","endLine":123,"endColumn":21},{"ruleId":"142","severity":1,"message":"148","line":126,"column":12,"nodeType":"140","messageId":"144","endLine":126,"endColumn":19},{"ruleId":"142","severity":1,"message":"149","line":129,"column":12,"nodeType":"140","messageId":"144","endLine":129,"endColumn":23},{"ruleId":"142","severity":1,"message":"150","line":132,"column":12,"nodeType":"140","messageId":"144","endLine":132,"endColumn":14},{"ruleId":"142","severity":1,"message":"151","line":133,"column":11,"nodeType":"140","messageId":"144","endLine":133,"endColumn":21},{"ruleId":"142","severity":1,"message":"152","line":26,"column":8,"nodeType":"140","messageId":"144","endLine":26,"endColumn":17},{"ruleId":"142","severity":1,"message":"153","line":76,"column":12,"nodeType":"140","messageId":"144","endLine":76,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":76,"column":18,"nodeType":"140","messageId":"144","endLine":76,"endColumn":25},{"ruleId":"142","severity":1,"message":"154","line":78,"column":24,"nodeType":"140","messageId":"144","endLine":78,"endColumn":37},{"ruleId":"130","replacedBy":"155"},{"ruleId":"132","replacedBy":"156"},{"ruleId":"142","severity":1,"message":"143","line":50,"column":18,"nodeType":"140","messageId":"144","endLine":50,"endColumn":25},{"ruleId":"142","severity":1,"message":"145","line":117,"column":12,"nodeType":"140","messageId":"144","endLine":117,"endColumn":21},{"ruleId":"142","severity":1,"message":"146","line":120,"column":12,"nodeType":"140","messageId":"144","endLine":120,"endColumn":20},{"ruleId":"142","severity":1,"message":"147","line":123,"column":12,"nodeType":"140","messageId":"144","endLine":123,"endColumn":21},{"ruleId":"142","severity":1,"message":"148","line":126,"column":12,"nodeType":"140","messageId":"144","endLine":126,"endColumn":19},{"ruleId":"142","severity":1,"message":"149","line":129,"column":12,"nodeType":"140","messageId":"144","endLine":129,"endColumn":23},{"ruleId":"142","severity":1,"message":"150","line":132,"column":12,"nodeType":"140","messageId":"144","endLine":132,"endColumn":14},{"ruleId":"142","severity":1,"message":"151","line":133,"column":11,"nodeType":"140","messageId":"144","endLine":133,"endColumn":21},{"ruleId":"130","replacedBy":"157"},{"ruleId":"132","replacedBy":"158"},{"ruleId":"142","severity":1,"message":"152","line":26,"column":8,"nodeType":"140","messageId":"144","endLine":26,"endColumn":17},{"ruleId":"142","severity":1,"message":"153","line":76,"column":12,"nodeType":"140","messageId":"144","endLine":76,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":76,"column":18,"nodeType":"140","messageId":"144","endLine":76,"endColumn":25},{"ruleId":"142","severity":1,"message":"154","line":78,"column":24,"nodeType":"140","messageId":"144","endLine":78,"endColumn":37},{"ruleId":"142","severity":1,"message":"159","line":1,"column":16,"nodeType":"140","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"160","line":5,"column":8,"nodeType":"140","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"138","severity":2,"message":"161","line":28,"column":33,"nodeType":"140","messageId":"141","endLine":28,"endColumn":40},{"ruleId":"142","severity":1,"message":"162","line":32,"column":11,"nodeType":"140","messageId":"144","endLine":32,"endColumn":23},{"ruleId":"138","severity":2,"message":"163","line":35,"column":21,"nodeType":"140","messageId":"141","endLine":35,"endColumn":25},{"ruleId":"138","severity":2,"message":"163","line":38,"column":16,"nodeType":"140","messageId":"141","endLine":38,"endColumn":20},{"ruleId":"138","severity":2,"message":"164","line":80,"column":34,"nodeType":"140","messageId":"141","endLine":80,"endColumn":46},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-undef","'preventdefault' is not defined.","Identifier","undef","no-unused-vars","'setRows' is assigned a value but never used.","unusedVar","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'birthDate' is assigned a value but never used.","'address' is assigned a value but never used.","'salaryDaily' is assigned a value but never used.","'id' is assigned a value but never used.","'onchangeId' is assigned a value but never used.","'TextField' is defined but never used.","'rows' is assigned a value but never used.","'setRowsFilter' is assigned a value but never used.",["165"],["166"],["165"],["166"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'setData' is not defined.","'handleChange' is assigned a value but never used.","'data' is not defined.","'onClickLogin' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},"Update the dependencies array to be: [checkUser]",{"range":"170","text":"171"},[415,417],"[checkUser]"]