[{"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx":"1","/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js":"2","/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx":"3","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx":"4","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx":"5","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx":"6","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx":"7","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx":"8","/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx":"9"},{"size":500,"mtime":1607501859058,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607501859058,"results":"12","hashOfConfig":"11"},{"size":584,"mtime":1607585046688,"results":"13","hashOfConfig":"11"},{"size":3122,"mtime":1607585046680,"results":"14","hashOfConfig":"11"},{"size":3801,"mtime":1607585046684,"results":"15","hashOfConfig":"11"},{"size":2183,"mtime":1607501859058,"results":"16","hashOfConfig":"11"},{"size":13928,"mtime":1607501859058,"results":"17","hashOfConfig":"11"},{"size":17152,"mtime":1607585046688,"results":"18","hashOfConfig":"11"},{"size":210,"mtime":1607501859058,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"scusqh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx",[],["41","42"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx",["43"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx",["44","45","46","47"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { green } from '@material-ui/core/colors';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './style.css';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    container: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '25px'\n    },\n    speedDial: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n  }));\n\n\nconst Celendar = () => {\n    const classes = useStyles();\n\n    // loading data\n    const [rows, setRows] = useState([]);\n    // filter data\n    const [rowsFilter, setRowsFilter] = useState([\n        {\n            id: 1,\n            mon: 1,\n            tue: 1,\n            wed: 0,\n            thu: 0,\n            fri: 1,\n            sat: 1,\n            sun: 0\n        }\n    ]);\n    // speedDial\n    const handleSpeedDial = () => {openDialog();}\n    // dialog \n    const [dialog, setDialog] = useState(false);\n    const openDialog = () => {setDialog(true)};\n    const closeDialog = () => {setDialog(false)};\n    // dialog submit\n    const handleDialogActionUpdate = () => {}\n    // update by select\n        //monday\n    const [mon, setMon] = useState(0);\n    const handleChangeMon = (e) => {setMon(e.target.value);};\n        //tuesday\n    const [tue, setTue] = useState(0);\n    const handleChangeTue = (e) => {setTue(e.target.value);};\n        //wed\n    const [wed, setWed] = useState(0);\n    const handleChangeWed = (e) => {setWed(e.target.value);};\n        //Thursday\n    const [thu, setThu] = useState(0);\n    const handleChangeThu = (e) => {setThu(e.target.value);};\n        // Friday\n    const [fri, setFri] = useState(0);\n    const handleChangeFri = (e) => {setFri(e.target.value);};\n        //saturday\n    const [sat, setSat] = useState(0);\n    const handleChangeSat = (e) => {setSat(e.target.value);};\n        //sunday\n    const [sun, setSun] = useState(0);\n    const handleChangeSun = (e) => {setSun(e.target.value);};\n    // render\n    return (\n        <>\n            {/* Title Employees */}\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Celendar\n            </Typography>\n            {/* Searching */}\n            <div className={classes.container}>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        placeholder=\"Search employee by id\"\n                        inputProps={{ 'aria-label': 'search employee' }}\n                    />\n                    <IconButton aria-label=\"search\" className={classes.iconButton}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </div>\n            {/* Table show employees */}\n            <form>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name's Employees</TableCell>\n                                <TableCell align=\"center\">Monday</TableCell>\n                                <TableCell align=\"center\">Tuesday</TableCell>\n                                <TableCell align=\"center\">Wednesday</TableCell>\n                                <TableCell align=\"center\">Thursday</TableCell>\n                                <TableCell align=\"center\">Friday</TableCell>\n                                <TableCell align=\"center\">Saturday</TableCell>\n                                <TableCell align=\"center\">Sunday</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {/* Render element to table from Employees Table (mysql)*/}\n                        <TableBody>\n                            {rowsFilter.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\"> Duong Dang Khoa </TableCell>\n                                    {row.mon === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.tue === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.wed === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.thu === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.fri === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sat === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sun === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </form>\n            <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<EditIcon />}\n                    onClick={handleSpeedDial}\n                    className={classes.speedDial}\n            > \n            </SpeedDial>\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To update new calendar employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\n                        <Select\n                            labelId=\"mon-label\"\n                            id=\"mon\"\n                            value={mon}\n                            onChange={handleChangeMon}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\n                        <Select\n                            labelId=\"tue-label\"\n                            id=\"tue\"\n                            value={tue}\n                            onChange={handleChangeTue}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\n                        <Select\n                            labelId=\"wed-label\"\n                            id=\"wed\"\n                            value={wed}\n                            onChange={handleChangeWed}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\n                        <Select\n                            labelId=\"thu-label\"\n                            id=\"thu\"\n                            value={thu}\n                            onChange={handleChangeThu}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\n                        <Select\n                            labelId=\"fri-label\"\n                            id=\"fri\"\n                            value={fri}\n                            onChange={handleChangeFri}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\n                        <Select\n                            labelId=\"sat-label\"\n                            id=\"sat\"\n                            value={sat}\n                            onChange={handleChangeSat}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\n                        <Select\n                            labelId=\"sun-label\"\n                            id=\"sun\"\n                            value={sun}\n                            onChange={handleChangeSun}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\" >\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Celendar\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx",["48","49","50","51","52"],"\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n// import Alert from '@material-ui/core/Alert';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport './style.css'\nimport axios from 'axios';\nimport React, {useEffect, useState} from 'react'\nimport AlertSuccess from '../../components/AlertSuccess';\n\n// Set style for icon action\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      height: 380,\n      position: 'fixed',\n      bottom: '15px',\n      right: '15px',\n      transform: 'translateZ(0px)',\n      flexGrow: 1,\n    },\n    speedDial: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  }));\n\n// Main function employees.jsx\nconst Employees = () => {\n    // Get style\n    const classes = useStyles();\n\n    // Hook set data for employee\n    const [rows, setRows] = useState([\n    ]);\n    useEffect(() => {\n        async function getData() {\n          try {\n            const response = await axios.get('http://localhost:3001/data/User_employee');\n            setRows(response.data);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        getData();\n      }, []);\n    \n    // Hook and function set show and hide Icon Action\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const handleOpenSpeedDial = () => {\n        setOpenSpeedDial(true);\n      };\n    \n      const handleCloseSpeedDial = () => {\n        setOpenSpeedDial(false);\n      };\n\n    // Set action for Icon Action\n      //action Add an employee\n    const actionAdd = () => {\n        handleClickOpenDialogAdd();\n    };\n     //action delete employee\n     const actionDelete = () => {\n        handleClickOpenDialogDelete();\n    };\n     //action update employee\n     const actionUpdate = () => {\n        handleClickOpenDialogUpdate();\n    };\n\n    // Dialog of Action add\n    const [openDialogAdd, setOpenDialogAdd] = useState(false);\n    const handleClickOpenDialogAdd = () => {\n        setOpenDialogAdd(true);\n      };\n    \n    const handleCloseDialogAdd = () => {\n        setOpenDialogAdd(false);\n      };\n\n    // Dialog of Action delete\n    const [openDialogDelete, setOpenDialogDelete] = useState(false);\n    const handleClickOpenDialogDelete = () => {\n        setOpenDialogDelete(true);\n      };\n    \n    const handleCloseDialogDelete = () => {\n        setOpenDialogDelete(false);\n      };\n\n    // Dialog of Action update\n    const [openDialogUpdate, setOpenDialogUpdate] = useState(false);\n    const handleClickOpenDialogUpdate = () => {\n        setOpenDialogUpdate(true);\n      };\n    \n    const handleCloseDialogUpdate = () => {\n        setOpenDialogUpdate(false);\n      };\n\n    // control input value DialogAdd\n      // First name\n    const [firstName, setFirstName] = useState('');\n    const onChangeFirstName = (e) => {setFirstName(e.target.value);};\n      //role\n    const [role, setRole] = useState('');\n    const onChangeRole = (e) => {setRole(e.target.value);};\n      // Last name\n    const [lastName, setLastName] = useState('');\n    const onChangeLastName = (e) => {setLastName(e.target.value);};\n      // Birth date\n    const [birthDate, setBirthDate] = useState('');\n    const onChangeBirthDate = (e) => {setBirthDate(e.target.value);};\n      // Adress\n    const [address, setAddress] = useState('');\n    const onChangeAddress = (e) => {setAddress(e.target.value);};\n      // Salary\n    const [salaryDaily, setSalaryDaily] = useState('');\n    const onChangeSalaryDaily = (e) => {setSalaryDaily(e.target.value);};\n      // ID\n    const [id, setId] = useState('');\n    const onChangeId = (e) => {setId(e.target.value);};\n  \n  // Alert\n      const [alert, setAlert] = useState(false);\n   // Onclick submit action \n      // Add event\n    const handleActionAdd = () => {\n      if(firstName && role && lastName && birthDate && address && salaryDaily)\n      {\n        async function getData() {\n            try {\n              const response = await axios.post('http://localhost:3001/data/User_employee/insert', {\n                first_name: firstName ,\n                last_name: lastName ,\n                birth_date: birthDate,\n                address: address,\n                role: role,\n                salary_day : salaryDaily\n              })\n              .then(function (response) {\n                window.alert(response.data);\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          window.location.reload();\n        } else {\n          window.alert(\"Invalid parameters\");\n        }\n    }\n      // Delete event\n    const handleActionDelete = () => {\n        async function getData() {\n            try {\n              const response = await axios.post('http://localhost:3001/data/User_employee/Delete', {\n                id: id\n              })\n              .then(function (response) {\n                console.log(response);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          window.location.reload();\n          setAlert(true);\n    }\n      // Update event\n    const handleActionUpdate = () => {\n        async function getData() {\n            try {\n              const response = await axios.post('http://localhost:3001/data/User_employee/Update', {\n                id: id,\n                first_name: firstName ,\n                last_name: lastName ,\n                birth_date: birthDate,\n                address: address,\n                role: role,\n                salary_day : salaryDaily\n              })\n              .then(function (response) {\n                console.log(response);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          // window.location.reload();\n      }\n    // render\n    return (\n        <>\n            {/* Title Employees */}\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Employees\n            </Typography>\n            {/* Table show employees */}\n            <form>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Index</TableCell>\n                                <TableCell align=\"center\">First Name</TableCell>\n                                <TableCell align=\"center\">Last Name</TableCell>\n                                <TableCell align=\"center\">Birth Date</TableCell>\n                                <TableCell align=\"center\">Adress</TableCell>\n                                <TableCell align=\"center\">Role</TableCell>\n                                <TableCell align=\"center\">Salary Daily ($)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {/* Render element to table from Employees Table (mysql)*/}\n                        <TableBody>\n                            {rows.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell align=\"center\">{row.id}</TableCell>\n                                    <TableCell align=\"center\">{row.first_name}</TableCell>\n                                    <TableCell align=\"center\">{row.last_name}</TableCell>\n                                    <TableCell align=\"center\">{row.birth_date}</TableCell>\n                                    <TableCell align=\"center\">{row.address}</TableCell>\n                                    <TableCell align=\"center\">{row.role}</TableCell>\n                                    <TableCell align=\"center\">{row.salary_day}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </form>\n\n            {/* Action icon */}\n            <div className={classes.root}>\n                <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<SpeedDialIcon />}\n                    onClose={handleCloseSpeedDial}\n                    onOpen={handleOpenSpeedDial}\n                    open={openSpeedDial}\n                    className={classes.speedDial}\n                >\n            {/* Action add */}\n                <SpeedDialAction\n                    key={`Add new employee`}\n                    icon={<PlusOneIcon />}\n                    tooltipTitle={`Add new employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionAdd();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action delete */}\n                <SpeedDialAction\n                    key={`Delete an employee`}\n                    icon={<DeleteForeverIcon />}\n                    tooltipTitle={`Delete an employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionDelete();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action update */}\n                <SpeedDialAction\n                    key={`Update an employee`}\n                    icon={<UpdateIcon />}\n                    tooltipTitle={`Update an employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionUpdate();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                </SpeedDial>\n            </div>\n            {/* Dialog add an employee */}\n            <Dialog open={openDialogAdd} onClose={handleCloseDialogAdd} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add an employee</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    To add new employee to this website, please informations here. We will send updates\n                    occasionally.\n                </DialogContentText>\n                        <TextField\n                            onChange={onChangeFirstName}\n                            required\n                            margin=\"dense\"\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeLastName}\n                            margin=\"dense\"\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeBirthDate}\n                            required\n                            id=\"birthDate\"\n                            margin=\"dense\"\n                            label=\"Birth date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeAddress}\n                            required\n                            margin=\"dense\"\n                            id=\"address\"\n                            label=\"Address\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeRole}\n                            required\n                            margin=\"dense\"\n                            id=\"role\"\n                            label=\"Role\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeSalaryDaily}\n                            required\n                            margin=\"dense\"\n                            id=\"salaryDaily\"\n                            label=\"Salary Daily\"\n                            fullWidth\n                        />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogAdd} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionAdd}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {/* Alert check form is empty? */}\n\n            {/* Dialog delete an employee */}\n            <Dialog open={openDialogDelete} onClose={handleCloseDialogDelete} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Delete an employee</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To delete an employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField\n                        onChange={onChangeId}\n                        required\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"id\"\n                        label=\"ID\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogDelete} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionDelete}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {/* Alert check form is empty? */}\n\n            {/* Dialog add an employee */}\n            <Dialog open={openDialogUpdate} onClose={handleCloseDialogUpdate} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update an employee</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To update new employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField\n                            onChange={onChangeId}\n                            required\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"id\"\n                            label=\"ID\"\n                            fullWidth\n                        />\n                    <TextField\n                        onChange={onChangeFirstName}\n                        required\n                        margin=\"dense\"\n                        id=\"firstName\"\n                        label=\"First Name\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={onChangeLastName}\n                        margin=\"dense\"\n                        id=\"lastName\"\n                        label=\"Last Name\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={onChangeBirthDate}\n                        required\n                        id=\"birthDate\"\n                        margin=\"dense\"\n                        label=\"Birth date\"\n                        type=\"date\"\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={onChangeAddress}\n                        required\n                        margin=\"dense\"\n                        id=\"address\"\n                        label=\"Address\"\n                        fullWidth\n                    />\n                    <TextField\n                        onChange={onChangeSalaryDaily}\n                        required\n                        margin=\"dense\"\n                        id=\"salaryDaily\"\n                        label=\"Salary Daily\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogUpdate} color=\"primary\" >\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionUpdate}> \n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Employees\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":null,"fatal":true,"severity":2,"message":"57","line":1,"column":2},{"ruleId":"58","severity":1,"message":"59","line":26,"column":8,"nodeType":"60","messageId":"61","endLine":26,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":76,"column":12,"nodeType":"60","messageId":"61","endLine":76,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":76,"column":18,"nodeType":"60","messageId":"61","endLine":76,"endColumn":25},{"ruleId":"58","severity":1,"message":"64","line":78,"column":24,"nodeType":"60","messageId":"61","endLine":78,"endColumn":37},{"ruleId":"58","severity":1,"message":"65","line":29,"column":8,"nodeType":"60","messageId":"61","endLine":29,"endColumn":20},{"ruleId":"58","severity":1,"message":"66","line":146,"column":14,"nodeType":"60","messageId":"61","endLine":146,"endColumn":19},{"ruleId":"58","severity":1,"message":"67","line":154,"column":21,"nodeType":"60","messageId":"61","endLine":154,"endColumn":29},{"ruleId":"58","severity":1,"message":"67","line":182,"column":21,"nodeType":"60","messageId":"61","endLine":182,"endColumn":29},{"ruleId":"58","severity":1,"message":"67","line":203,"column":21,"nodeType":"60","messageId":"61","endLine":203,"endColumn":29},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mHome\u001b[39m from \u001b[32m'./pages/Home/Home'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m","no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","'setRowsFilter' is assigned a value but never used.","'AlertSuccess' is defined but never used.","'alert' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]