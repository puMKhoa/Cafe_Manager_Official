[{"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx":"1","/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js":"2","/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx":"3","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Home/Home.jsx":"4","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx":"5","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx":"6","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx":"7","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx":"8","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx":"9","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Revenue/Revenue.jsx":"10","/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx":"11","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Order/Order.jsx":"12"},{"size":500,"mtime":1607501859058,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607501859058,"results":"15","hashOfConfig":"14"},{"size":485,"mtime":1609065606810,"results":"16","hashOfConfig":"14"},{"size":625,"mtime":1607585816717,"results":"17","hashOfConfig":"14"},{"size":7417,"mtime":1609065606810,"results":"18","hashOfConfig":"14"},{"size":3210,"mtime":1609065606810,"results":"19","hashOfConfig":"14"},{"size":14750,"mtime":1609065606810,"results":"20","hashOfConfig":"14"},{"size":20857,"mtime":1609065606810,"results":"21","hashOfConfig":"14"},{"size":15357,"mtime":1609065606810,"results":"22","hashOfConfig":"14"},{"size":6339,"mtime":1609065606810,"results":"23","hashOfConfig":"14"},{"size":210,"mtime":1607501859058,"results":"24","hashOfConfig":"14"},{"size":3507,"mtime":1609065606810,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"dvcray",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/khoaf/Programing/Cafe_Manager_Official/client/src/index.jsx",[],["56","57"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/reportWebVitals.js",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/App.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Home/Home.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Workplace/Workplace.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Login/Login.jsx",[],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Menu/Menu.jsx",["58"],"import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport './style.css'\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport Axios from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { SpeedDialAction, TextField } from '@material-ui/core';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport UpdateIcon from '@material-ui/icons/Update';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n      minWidth: 300,\n      textAlign: 'center',\n      margin: 20,\n    },\n    media: {\n      height: 140,\n    },\n    speedDial: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n    },\n    }));\nconst Menu = () => {\n    const classes = useStyles();\n    // loading data\n    const [data, setData] = useState([\n      \n    ]);\n    useEffect(() => {\n        async function getData() {\n          try {\n            const response = await Axios.get('http://localhost:3001/Menu_Item/');\n            setData(response.data);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        getData();\n      }, []);\n    // onclick \n        //updates\n    const [showDialogUpdate, setShowDialogUpdate] = useState(false);\n    const closeDialogUpdate = () => {setShowDialogUpdate(false);}\n    const [dataToUpdate, setDataToUpdate] = useState([\n        {\n            item_name: '', \n            item_price: '', \n            urlImg: ''\n        }\n    ]);\n    const handleClickOpenDialogUpdate = () => {\n        setShowDialogUpdate(true);\n    }\n    const handleClickCloseDialogUpdate = () => {\n        setShowDialogUpdate(false);\n    }\n\n    const handleClickOpenFormUpdate =() => {\n       \n        async function checkItem(){\n            if(price === ''){\n                setPrice(0);\n            }\n            await Axios.post('http://localhost:3001/Menu_item/check_Item/', {\n                id: id\n             })\n             .then(function (response) {\n                setDataToUpdate([...response.data]); \n                setOpenFormUpdate(true);\n\n             })\n             .catch(function (error) {\n               window.alert(\"Error: \" + error.message)\n             });\n        }\n        checkItem();\n        handleClickCloseDialogUpdate();\n    }\n    const [openFormUpdate, setOpenFormUpdate] = useState(false);\n    const handleClickCloseFormUpdate = () => {setOpenFormUpdate(false);}\n        //remove\n    const [showDialogDelete, setShowDialogDelete] = useState(false);\n    const closeDialogDelete = () => {setShowDialogUpdate(false);}\n    const handleClickOpenDialogDelete = () => {\n        setShowDialogDelete(true);\n    }\n    const handleClickCloseDialogDelete = () => {\n        setShowDialogDelete(false);\n    }\n        //add\n    const [showDialogAdd, setShowDialogAdd] = useState(false);\n    const closeDialogAdd = () => {setShowDialogUpdate(false);}\n    const handleClickOpenDialogAdd = () => {\n        setShowDialogAdd(true);\n    }\n    const handleClickCloseDialogAdd = () => {\n        setShowDialogAdd(false);\n    }\n        // submit\n    const submitAdd = () => {\n        try {\n            Axios.post('http://localhost:3001/Menu_item/Insert_Menu/', {\n               name: name,\n               price: price,\n               urlImg: urlImg\n             })\n             .then(function (response) {\n                setData(response.data[0]);\n                handleClickCloseDialogAdd();\n             })\n             .catch(function (error) {\n               window.alert(\"Error: \" + error.message)\n             });\n           } catch (error) {\n             window.location.alert(error);\n           }\n    }\n\n    const submitUpdate = () => {\n        try {\n            Axios.post('http://localhost:3001/Menu_item/Update_Menu/', {\n                id: id,\n               name: name,\n               price: price,\n               urlImg: urlImg\n             })\n             .then(function (response) {\n                setData(response.data[0]);\n                handleClickCloseFormUpdate();\n             })\n             .catch(function (error) {\n               window.alert(\"Error: \" + error.message)\n             });\n           } catch (error) {\n             window.location.alert(error);\n           }\n    }\n    const submitDelete = () => {\n        try {\n            Axios.post('http://localhost:3001/Menu_item/Delete_Menu/', {\n                id: id\n             })\n             .then(function (response) {\n                console.log(response);\n                window.location.reload();      \n             })\n             .catch(function (error) {\n               window.alert(\"Error: \" + error.message)\n             });\n           } catch (error) {\n             window.location.alert(error);\n           }\n    }\n\n\n    // Icon Action\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const handleOpenSpeedDial = () => {\n            setOpenSpeedDial(true);\n          };\n        \n    const handleCloseSpeedDial = () => {\n        setOpenSpeedDial(false);\n        };\n    // Set action for Icon Action\n        //action Add an employee\n    const actionAdd = () => {\n        handleClickOpenDialogAdd();\n    };\n        //action delete employee\n        const actionDelete = () => {\n        handleClickOpenDialogDelete();\n    };\n        //action update employee\n        const actionUpdate = () => {\n        handleClickOpenDialogUpdate();\n    };\n    // control value change\n    const [id, setId] = useState('');\n    const onChangeId = (e) => {setId(e.target.value);};\n    const [name, setName] = useState('');\n    const onChangeName = (e) => {setName(e.target.value);};\n    const [price, setPrice] = useState('');\n    const onChangePrice = (e) => {setPrice(e.target.value);};\n    // eslint-disable-next-line no-unused-vars\n    const [urlImg, seturlImg] = useState('');\n    const onChangeUrlImg = (e) => {seturlImg(e.target.value);};\n    return (\n        <>\n        <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Menu\n        </Typography>\n        <div className='menu'>\n            \n        {data.map((item) => (\n            <Card className={classes.root+\" \"+ 'card-menu'}>\n            <CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image={item.urlImg}\n                title={item.item_name}\n                />\n                <CardContent>\n                <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                {item.id}. {item.item_name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Price: ${item.item_price}\n                </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n        ))}\n            <div className={classes.root}>\n                <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<SpeedDialIcon />}\n                    onClose={handleCloseSpeedDial}\n                    onOpen={handleOpenSpeedDial}\n                    open={openSpeedDial}\n                    className={classes.speedDial}\n                >\n            {/* Action add */}\n                <SpeedDialAction\n                    key={`Add new item`}\n                    icon={<PlusOneIcon />}\n                    tooltipTitle={`Add new item`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionAdd();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action delete */}\n                <SpeedDialAction\n                    key={`Delete an item`}\n                    icon={<DeleteForeverIcon />}\n                    tooltipTitle={`Delete an item`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionDelete();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action update */}\n                <SpeedDialAction\n                    key={`Update an item`}\n                    icon={<UpdateIcon />}\n                    tooltipTitle={`Update an item`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionUpdate();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                </SpeedDial>\n            </div>\n\n        <Dialog open={showDialogAdd} onClose={closeDialogAdd} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                        To add new item on menu, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField \n                        onChange={onChangeName}\n                        required\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name\"\n                        fullWidth\n                    />\n                    <TextField \n                        onChange={onChangePrice}\n                        required\n                        margin=\"dense\"\n                        id=\"price\"\n                        label=\"Price\"\n                        fullWidth\n                    />\n                    <TextField \n                        onChange={onChangeUrlImg}\n                        required\n                        margin=\"dense\"\n                        id=\"urlImg\"\n                        label=\"Background\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClickCloseDialogAdd} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={submitAdd}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={showDialogDelete} onClose={closeDialogDelete} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Delete</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                        To Delete an item on menu, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField \n                        onChange={onChangeId}\n                        required\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"id\"\n                        label=\"ID\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClickCloseDialogDelete} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={submitDelete}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={showDialogUpdate} onClose={closeDialogUpdate} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                        To update new item on menu, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField \n                        onChange={onChangeId}\n                        required\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"id\"\n                        label=\"ID\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClickCloseDialogUpdate} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleClickOpenFormUpdate}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        \n        {openFormUpdate ?     \n        <Dialog open={openFormUpdate} onClose={handleClickCloseFormUpdate} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n            <DialogContent>\n                <TextField \n                    onChange={onChangeName}\n                    required\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    fullWidth\n                    defaultValue={dataToUpdate[0].item_name}\n                />\n                <TextField \n                    onChange={onChangePrice}\n                    required\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"price\"\n                    label=\"Price\"\n                    fullWidth\n                    defaultValue={dataToUpdate[0].item_price}\n                />\n                <TextField \n                    onChange={onChangeUrlImg}\n                    required\n                    margin=\"dense\"\n                    id=\"urlImg\"\n                    label=\"Background\"\n                    fullWidth\n                    defaultValue={dataToUpdate[0].urlImg}\n                    />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClickCloseFormUpdate} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button color=\"primary\" onClick={submitUpdate}>\n                    Submit\n                </Button>\n            </DialogActions>\n        </Dialog>\n        : null\n        }\n        </div>\n        </>\n    )\n}\n\nexport default Menu\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Employees/Employees.jsx",["59"],"\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport PlusOneIcon from '@material-ui/icons/PlusOne';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n// import Alert from '@material-ui/core/Alert';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport './style.css'\nimport axios from 'axios';\nimport React, {useEffect, useState} from 'react'\n\n// Set style for icon action\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      height: 380,\n      position: 'fixed',\n      bottom: '15px',\n      right: '15px',\n      transform: 'translateZ(0px)',\n      flexGrow: 1,\n    },\n    speedDial: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  }));\n\n// Main function employees.jsx\nconst Employees = () => {\n    // Get style\n    const classes = useStyles();\n\n    // Hook set data for employee\n    const [rows, setRows] = useState([\n    ]);\n    useEffect(() => {\n        async function getData() {\n          try {\n            const response = await axios.get('http://localhost:3001/data/User_employee');\n            setRows(response.data);\n          } catch (error) {\n            console.error(error);\n          }\n        }\n        getData();\n      }, []);\n  \n    // Hook and function set show and hide Icon Action\n    const [openSpeedDial, setOpenSpeedDial] = useState(false);\n    const handleOpenSpeedDial = () => {\n        setOpenSpeedDial(true);\n      };\n    \n      const handleCloseSpeedDial = () => {\n        setOpenSpeedDial(false);\n      };\n\n    // Set action for Icon Action\n      //action Add an employee\n    const actionAdd = () => {\n        handleClickOpenDialogAdd();\n    };\n     //action delete employee\n     const actionDelete = () => {\n        handleClickOpenDialogDelete();\n    };\n     //action update employee\n     const actionUpdate = () => {\n        handleClickOpenDialogUpdate();\n    };\n\n    // Dialog of Action add\n    const [openDialogAdd, setOpenDialogAdd] = useState(false);\n    const handleClickOpenDialogAdd = () => {\n        setOpenDialogAdd(true);\n      };\n    \n    const handleCloseDialogAdd = () => {\n        setOpenDialogAdd(false);\n      };\n\n    // Dialog of Action delete\n    const [openDialogDelete, setOpenDialogDelete] = useState(false);\n    const handleClickOpenDialogDelete = () => {\n        setOpenDialogDelete(true);\n      };\n    \n    const handleCloseDialogDelete = () => {\n        setOpenDialogDelete(false);\n      };\n\n    // Dialog of Action update\n    const [openDialogUpdate, setOpenDialogUpdate] = useState(false);\n    const handleClickOpenDialogUpdate = () => {\n        setOpenDialogUpdate(true);\n      };\n    \n    const handleCloseDialogUpdate = () => {\n        setOpenDialogUpdate(false);\n      };\n\n    // control input value DialogAdd\n      // First name\n    const [firstName, setFirstName] = useState('');\n    const onChangeFirstName = (e) => {setFirstName(e.target.value);};\n      //role\n    const [role, setRole] = useState('');\n    const onChangeRole = (e) => {setRole(e.target.value);};\n      // Last name\n    const [lastName, setLastName] = useState('');\n    const onChangeLastName = (e) => {setLastName(e.target.value);};\n      // Birth date\n    const [birthDate, setBirthDate] = useState('');\n    const onChangeBirthDate = (e) => {setBirthDate(e.target.value);};\n      // Adress\n    const [address, setAddress] = useState('');\n    const onChangeAddress = (e) => {setAddress(e.target.value);};\n      // Salary\n    const [salaryDaily, setSalaryDaily] = useState('');\n    const onChangeSalaryDaily = (e) => {setSalaryDaily(e.target.value);};\n      // ID\n    const [id, setId] = useState('');\n    const onChangeId = (e) => {setId(e.target.value);};\n  \n  // Alert\n   // Onclick submit action \n      // Add event\n    const handleActionAdd = () => {\n      if(firstName && role && lastName && birthDate && address && salaryDaily)\n      {\n        async function getData() {\n            try {\n              await axios.post('http://localhost:3001/data/User_employee/insert', {\n                first_name: firstName ,\n                last_name: lastName ,\n                birth_date: birthDate,\n                address: address,\n                role: role,\n                salary_day : salaryDaily\n              })\n              .then(function (response) {\n                setRows(response.data.message[0]);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          handleCloseDialogAdd();\n        } else {\n          window.alert(\"Invalid parameters\");\n        }\n    }\n      // Delete event\n    const handleActionDelete = () => {\n        async function getData() {\n            try {\n              await axios.post('http://localhost:3001/data/User_employee/Delete', {\n                id: id\n              })\n              .then(function (response) {\n                setRows(response.data.message[0]);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          handleCloseDialogDelete();\n    }\n      // Update event\n    const [openDialogFormUpdate, setOpenDialogFormUpdate] = useState(false);\n    const [dataToUpdate, setDataToUpdate] = useState([\n      {\n        id: '',\n        first_name: \"\",\n        last_name: '',\n        address: \"\",\n        birth_date: \"\",\n        role: \"\",\n        salary_day: ''\n    }\n  ]);\n    const handleCloseDialogFormUpdate = () => {\n      setOpenDialogFormUpdate(false);\n    }\n    const handleActionUpdateFindById = () => {\n        function getData() {\n            try {\n              if(birthDate === \"\")\n                setBirthDate('1980-01-01');\n              if(salaryDaily === \"\")\n                setSalaryDaily(0);\n             axios.post('http://localhost:3001/data/User_employee/Render_Employee', {\n                id: id\n              })\n              .then(function (response) {\n                // setDataToUpdate(response.data);\n                setDataToUpdate([...response.data]);\n                setOpenDialogFormUpdate(true);\n                // console.log(dataToUpdate[0].birth_date);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: Nobody have this ID, please check agian\")\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }\n          getData();\n          \n      }\n    const handleActionUpdate = () => {\n        axios.post('http://localhost:3001/data/User_employee/Update', {\n          id: id,\n          first_name: firstName ,\n          last_name: lastName ,\n          birth_date: birthDate,\n          address: address,\n          role: role,\n          salary_day : salaryDaily\n        })\n        .then(function (response) {\n          \n          setRows(response.data.message[0]);\n          handleCloseDialogUpdate();\n          handleCloseDialogFormUpdate();\n        })\n        .catch(function (error) {\n          window.alert(\"Error: \" + error.message)\n        });\n      }\n    // render\n    return (\n        <>\n            {/* Title Employees */}\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Employees\n            </Typography>\n            {/* Table show employees */}\n            <form>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\" >\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Index</TableCell>\n                                <TableCell align=\"center\">First Name</TableCell>\n                                <TableCell align=\"center\">Last Name</TableCell>\n                                <TableCell align=\"center\">Birth Date</TableCell>\n                                <TableCell align=\"center\">Adress</TableCell>\n                                <TableCell align=\"center\">Role</TableCell>\n                                <TableCell align=\"center\">Salary Daily ($)</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {/* Render element to table from Employees Table (mysql)*/}\n                        <TableBody>\n                            {rows.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell align=\"center\">{row.id}</TableCell>\n                                    <TableCell align=\"center\">{row.first_name}</TableCell>\n                                    <TableCell align=\"center\">{row.last_name}</TableCell>\n                                    <TableCell align=\"center\">{row.birth_date.split('T')[0]}</TableCell>\n                                    <TableCell align=\"center\">{row.address}</TableCell>\n                                    <TableCell align=\"center\">{row.role}</TableCell>\n                                    <TableCell align=\"center\">{row.salary_day}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </form>\n\n            {/* Action icon */}\n            <div className={classes.root}>\n                <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<SpeedDialIcon />}\n                    onClose={handleCloseSpeedDial}\n                    onOpen={handleOpenSpeedDial}\n                    open={openSpeedDial}\n                    className={classes.speedDial}\n                >\n            {/* Action add */}\n                <SpeedDialAction\n                    key={`Add new employee`}\n                    icon={<PlusOneIcon />}\n                    tooltipTitle={`Add new employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionAdd();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action delete */}\n                <SpeedDialAction\n                    key={`Delete an employee`}\n                    icon={<DeleteForeverIcon />}\n                    tooltipTitle={`Delete an employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionDelete();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                {/* Action update */}\n                <SpeedDialAction\n                    key={`Update an employee`}\n                    icon={<UpdateIcon />}\n                    tooltipTitle={`Update an employee`}\n                    tooltipOpen\n                    onClick={() => {\n                        actionUpdate();\n                        handleCloseSpeedDial();\n                    }}\n                />\n                </SpeedDial>\n            </div>\n            {/* Dialog add an employee */}\n            <Dialog open={openDialogAdd} onClose={handleCloseDialogAdd} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add an employee</DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    To add new employee to this website, please informations here. We will send updates\n                    occasionally.\n                </DialogContentText>\n                        <TextField\n                            onChange={onChangeFirstName}\n                            required\n                            margin=\"dense\"\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeLastName}\n                            margin=\"dense\"\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeBirthDate}\n                            required\n                            id=\"birthDate\"\n                            margin=\"dense\"\n                            label=\"Birth date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeAddress}\n                            required\n                            margin=\"dense\"\n                            id=\"address\"\n                            label=\"Address\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeRole}\n                            required\n                            margin=\"dense\"\n                            id=\"role\"\n                            label=\"Role\"\n                            fullWidth\n                        />\n                        <TextField\n                            onChange={onChangeSalaryDaily}\n                            required\n                            margin=\"dense\"\n                            id=\"salaryDaily\"\n                            label=\"Salary Daily\"\n                            fullWidth\n                        />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogAdd} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionAdd}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {/* Alert check form is empty? */}\n\n            {/* Dialog delete an employee */}\n            <Dialog open={openDialogDelete} onClose={handleCloseDialogDelete} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Delete an employee</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To delete an employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField\n                        onChange={onChangeId}\n                        required\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"id\"\n                        label=\"ID\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogDelete} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionDelete}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {/* Alert check form is empty? */}\n\n            {/* Dialog update an employee */}\n            <Dialog open={openDialogUpdate} onClose={handleCloseDialogUpdate} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update an employee</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To update new employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <TextField\n                            onChange={onChangeId}\n                            required\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"id\"\n                            label=\"ID\"\n                            fullWidth\n                        />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogUpdate} color=\"primary\" >\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionUpdateFindById}> \n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={openDialogFormUpdate} onClose={handleCloseDialogFormUpdate} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update</DialogTitle>\n                <DialogContent>\n                        <TextField\n                            onChange={onChangeFirstName}\n                            required\n                            margin=\"dense\"\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            fullWidth\n                            defaultValue={dataToUpdate[0].first_name}\n                        />\n                        <TextField\n                            onChange={onChangeLastName}\n                            margin=\"dense\"\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            fullWidth\n                            defaultValue={dataToUpdate[0].last_name}\n                        />\n                        <TextField\n                            onChange={onChangeBirthDate}\n                            required\n                            id=\"birthDate\"\n                            margin=\"dense\"\n                            label=\"Birth date\"\n                            type=\"date\"\n                            InputLabelProps={{\n                            shrink: true,\n                            }}\n                            fullWidth\n                            defaultValue={dataToUpdate[0].birth_date.split('T')[0]}\n                            \n                        />\n                        <TextField\n                            onChange={onChangeAddress}\n                            required\n                            margin=\"dense\"\n                            id=\"address\"\n                            label=\"Address\"\n                            fullWidth\n                            defaultValue={dataToUpdate[0].address}\n\n                        />\n                        <TextField\n                            onChange={onChangeRole}\n                            required\n                            margin=\"dense\"\n                            id=\"role\"\n                            label=\"Role\"\n                            fullWidth\n                            // default={dataToUpdate.role}\n                            defaultValue={dataToUpdate[0].role}\n                            \n                        />\n                        <TextField\n                            onChange={onChangeSalaryDaily}\n                            required\n                            margin=\"dense\"\n                            id=\"salaryDaily\"\n                            label=\"Salary Daily\"\n                            fullWidth\n                            // default={dataToUpdate.salary_day}\n                            defaultValue={dataToUpdate[0].salary_day}\n\n                        />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCloseDialogFormUpdate} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleActionUpdate}>\n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Employees\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Celendar/Celendar.jsx",["60"],"import React, { useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { green } from '@material-ui/core/colors';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './style.css';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Axios from 'axios';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: 400,\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n    },\n    iconButton: {\n      padding: 10,\n    },\n    divider: {\n      height: 28,\n      margin: 4,\n    },\n    container: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '25px'\n    },\n    speedDial: {\n        position: 'fixed',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n  }));\n\n\nconst Celendar = () => {\n    const classes = useStyles();\n    // loading data\n    const [rowsFilter, setRowsFilter] = useState([]);\n     // function onclicksearch()\n    const onClickSearch = () => {\n        if(id){\n            try {\n             Axios.post('http://localhost:3001/User_calendar/take_value/', {\n                id: id\n              })\n              .then(function (response) {\n                // setDataToUpdate(response.data);\n                setRowsFilter(response.data);\n                // console.log(dataToUpdate[0].birth_date);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }else{\n            window.alert('invalid id')\n        }\n    }\n        \n    // onchange Search\n    const [id, setId] = useState('');\n    const onChangeIDSearch = (e) => {\n        setId(e.target.value);\n    }\n    // speedDial\n    const handleSpeedDial = () => {openDialog();}\n    // dialog \n    const [dialog, setDialog] = useState(false);\n    const openDialog = () => {setDialog(true)};\n    const closeDialog = () => {setDialog(false)};\n    // dialog submit\n    const handleDialogActionUpdate = () => {\n        if(id){\n            try {\n             Axios.post('http://localhost:3001/User_calendar/update_value/', {\n                id:id,\n                mon:mon, tue:tue,wed:wed, thu:thu, fri:fri , sat:sat, sun:sun\n                \n              })\n              .then(function (response) {\n                // setDataToUpdate(response.data);\n                closeDialog();\n                setId(id);\n                onClickSearch();\n                // console.log(dataToUpdate[0].birth_date);\n              })\n              .catch(function (error) {\n                window.alert(\"Error: \" + error.message)\n              });\n            } catch (error) {\n              console.error(error);\n            }\n          }else{\n            window.alert('invalid employee')\n        }\n    }\n    // update by select\n        //monday\n    const [mon, setMon] = useState(0);\n    const handleChangeMon = (e) => {setMon(e.target.value);};\n        //tuesday\n    const [tue, setTue] = useState(0);\n    const handleChangeTue = (e) => {setTue(e.target.value);};\n        //wed\n    const [wed, setWed] = useState(0);\n    const handleChangeWed = (e) => {setWed(e.target.value);};\n        //Thursday\n    const [thu, setThu] = useState(0);\n    const handleChangeThu = (e) => {setThu(e.target.value);};\n        // Friday\n    const [fri, setFri] = useState(0);\n    const handleChangeFri = (e) => {setFri(e.target.value);};\n        //saturday\n    const [sat, setSat] = useState(0);\n    const handleChangeSat = (e) => {setSat(e.target.value);};\n        //sunday\n    const [sun, setSun] = useState(0);\n    const handleChangeSun = (e) => {setSun(e.target.value);};\n   \n    // render\n    return (\n        <>\n            {/* Title Employees */}\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Celendar\n            </Typography>\n            {/* Searching */}\n            <div className={classes.container}>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        placeholder=\"Search employee by id\"\n                        inputProps={{ 'aria-label': 'search employee' }}\n                        onChange={onChangeIDSearch}\n                    />\n                    <IconButton aria-label=\"search\" className={classes.iconButton} onClick={onClickSearch}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n            </div>\n            {/* Table show employees */}\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Name's Employees</TableCell>\n                                <TableCell align=\"center\">Monday</TableCell>\n                                <TableCell align=\"center\">Tuesday</TableCell>\n                                <TableCell align=\"center\">Wednesday</TableCell>\n                                <TableCell align=\"center\">Thursday</TableCell>\n                                <TableCell align=\"center\">Friday</TableCell>\n                                <TableCell align=\"center\">Saturday</TableCell>\n                                <TableCell align=\"center\">Sunday</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        {/* Render element to table from Employees Table (mysql)*/}\n                        <TableBody>\n                            {rowsFilter.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell component=\"th\" scope=\"row\">{row.first_name +\" \" + row.last_name}</TableCell>\n                                    {row.mon === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.tue === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.wed === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.thu === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.fri === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sat === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                    {row.sun === 1 \n                                        ?\n                                            <TableCell align=\"center\"><DoneIcon style={{ color: green[500] }}/></TableCell>\n                                        :\n                                            <TableCell align=\"center\"><ClearIcon /></TableCell>\n                                    }\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            \n            <SpeedDial\n                    ariaLabel=\"SpeedDial tooltip example\"\n                    icon={<EditIcon />}\n                    onClick={handleSpeedDial}\n                    className={classes.speedDial}\n            > \n            </SpeedDial>\n            <Dialog open={dialog} onClose={closeDialog} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Update celendar</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To update new calendar employee, please informations here. We will send updates\n                        occasionally.\n                    </DialogContentText>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"mon-lable\">Monday</InputLabel>\n                        <Select\n                            labelId=\"mon-label\"\n                            id=\"mon\"\n                            value={mon}\n                            onChange={handleChangeMon}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"tue-lable\">Tuesday</InputLabel>\n                        <Select\n                            labelId=\"tue-label\"\n                            id=\"tue\"\n                            value={tue}\n                            onChange={handleChangeTue}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"wed-lable\">Wednesday</InputLabel>\n                        <Select\n                            labelId=\"wed-label\"\n                            id=\"wed\"\n                            value={wed}\n                            onChange={handleChangeWed}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"thu-lable\">Thursday</InputLabel>\n                        <Select\n                            labelId=\"thu-label\"\n                            id=\"thu\"\n                            value={thu}\n                            onChange={handleChangeThu}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"fri-lable\">Friday</InputLabel>\n                        <Select\n                            labelId=\"fri-label\"\n                            id=\"fri\"\n                            value={fri}\n                            onChange={handleChangeFri}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sat-lable\">Saturday</InputLabel>\n                        <Select\n                            labelId=\"sat-label\"\n                            id=\"sat\"\n                            value={sat}\n                            onChange={handleChangeSat}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"sun-lable\">Sunday</InputLabel>\n                        <Select\n                            labelId=\"sun-label\"\n                            id=\"sun\"\n                            value={sun}\n                            onChange={handleChangeSun}\n                        >\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={0}>No</MenuItem>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={closeDialog} color=\"primary\" >\n                        Cancel\n                    </Button>\n                    <Button color=\"primary\" onClick={handleDialogActionUpdate}> \n                        Submit\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default Celendar\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Revenue/Revenue.jsx",["61","62","63","64","65","66","67","68","69"],"import { MenuItem, Paper, Select, Typography } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport axios from 'axios';\nimport './style.css'\nconst Revenue = () => {\n    const [dataSalary, setDataSalary] = useState(0);\n    const [dataOrder, setDataOrder] = useState(0);\n    const [time, setTime] = useState('');\n    const onChangeTime = (e) => {\n        setTime(e.target.value);\n        axios.post('http://localhost:3001/Order_month/Total_salary_value/', {      \n        })\n        .then((response) => {\n            setDataSalary(response.data[0].total);\n            console.log();\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n        axios.post('http://localhost:3001/Order_month/Total_Price_Order/', {\n            month: e.target.value        \n        })\n        .then((response) => {\n            setDataOrder(response.data[0].Total_Price_order);\n            \n        })\n        .catch((error) => {\n            console.log(error)\n        });\n        console.log(`${dataOrder} - ${dataSalary} = ${dataOrder-dataSalary}`);\n        };\n    return (\n        <>\n            <Typography  align=\"center\" variant=\"h4\" paragraph>\n                Revenue\n            </Typography>\n            <div className=\"revenue\">\n                <Paper className=\"paper\">\n                    <Typography  align=\"left\" variant=\"h6\" paragraph>\n                        Total Employees Salary\n                    </Typography>\n                    <Typography  align=\"center\" variant=\"h4\" paragraph>\n                        ${dataSalary}\n                    </Typography>\n                    <Typography align=\"left\">\n                        <Select\n                            \n                            value={time}\n                            onChange={onChangeTime}>\n                            <MenuItem value={'2020-01-01'}>January - 2020</MenuItem>\n                            <MenuItem value={'2020-02-01'}>February - 2020</MenuItem>\n                            <MenuItem value={'2020-03-01'}>March - 2020</MenuItem>\n                            <MenuItem value={'2020-04-01'}>April - 2020</MenuItem>\n                            <MenuItem value={'2020-05-01'}>May - 2020</MenuItem>\n                            <MenuItem value={'2020-06-01'}>June - 2020</MenuItem>\n                            <MenuItem value={'2020-07-01'}>July - 2020</MenuItem>\n                            <MenuItem value={'2020-08-01'}>August - 2020</MenuItem>\n                            <MenuItem value={'2020-09-01'}>September - 2020</MenuItem>\n                            <MenuItem value={'2020-10-01'}>October - 2020</MenuItem>\n                            <MenuItem value={'2020-11-01'}>November - 2020</MenuItem>\n                            <MenuItem value={'2020-12-01'}>December - 2020</MenuItem>\n                        </Select>\n                    </Typography>\n                    \n                </Paper> \n                <Paper  className=\"paper\">\n                    <Typography  align=\"left\" variant=\"h6\" paragraph>\n                        Total Price Order\n                    </Typography>\n                    <Typography  align=\"center\" variant=\"h4\" paragraph>\n                        ${dataOrder}\n                    </Typography>\n                    <Typography align=\"left\">\n                        <Select \n                            value={time}\n                            onChange={onChangeTime}\n                            \n                        >\n                            <MenuItem value={'2020-01-01'}>January - 2020</MenuItem>\n                            <MenuItem value={'2020-02-01'}>February - 2020</MenuItem>\n                            <MenuItem value={'2020-03-01'}>March - 2020</MenuItem>\n                            <MenuItem value={'2020-04-01'}>April - 2020</MenuItem>\n                            <MenuItem value={'2020-05-01'}>May - 2020</MenuItem>\n                            <MenuItem value={'2020-06-01'}>June - 2020</MenuItem>\n                            <MenuItem value={'2020-07-01'}>July - 2020</MenuItem>\n                            <MenuItem value={'2020-08-01'}>August - 2020</MenuItem>\n                            <MenuItem value={'2020-09-01'}>September - 2020</MenuItem>\n                            <MenuItem value={'2020-10-01'}>October - 2020</MenuItem>\n                            <MenuItem value={'2020-11-01'}>November - 2020</MenuItem>\n                            <MenuItem value={'2020-12-01'}>December - 2020</MenuItem> \n                        </Select>\n                    </Typography>\n                    \n                </Paper> \n                <Paper  className=\"paper\">\n                    <Typography  align=\"left\" variant=\"h6\" paragraph>\n                        Total Profit\n                    </Typography>\n                    <Typography  align=\"center\" variant=\"h4\" paragraph>\n                        ${dataOrder-dataSalary}\n                    </Typography>\n                    <Typography align=\"left\">\n                        <Select \n                            value={time}\n                            onChange={onChangeTime}\n                        >\n                            <MenuItem value={'2020-01-01'}>January - 2020</MenuItem>\n                            <MenuItem value={'2020-02-01'}>February - 2020</MenuItem>\n                            <MenuItem value={'2020-03-01'}>March - 2020</MenuItem>\n                            <MenuItem value={'2020-04-01'}>April - 2020</MenuItem>\n                            <MenuItem value={'2020-05-01'}>May - 2020</MenuItem>\n                            <MenuItem value={'2020-06-01'}>June - 2020</MenuItem>\n                            <MenuItem value={'2020-07-01'}>July - 2020</MenuItem>\n                            <MenuItem value={'2020-08-01'}>August - 2020</MenuItem>\n                            <MenuItem value={'2020-09-01'}>September - 2020</MenuItem>\n                            <MenuItem value={'2020-10-01'}>October - 2020</MenuItem>\n                            <MenuItem value={'2020-11-01'}>November - 2020</MenuItem>\n                            <MenuItem value={'2020-12-01'}>December - 2020</MenuItem> \n                        </Select>\n                    </Typography>\n                    \n                </Paper> \n            </div>\n        </>\n    )\n}\n\nexport default Revenue;\n","/home/khoaf/Programing/Cafe_Manager_Official/client/src/containers/Login/index.jsx",[],["70","71"],"/home/khoaf/Programing/Cafe_Manager_Official/client/src/pages/Order/Order.jsx",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":174,"column":20,"nodeType":"78","messageId":"79","endLine":174,"endColumn":29},{"ruleId":"76","severity":1,"message":"80","line":200,"column":26,"nodeType":"78","messageId":"79","endLine":200,"endColumn":41},{"ruleId":"76","severity":1,"message":"81","line":76,"column":24,"nodeType":"78","messageId":"79","endLine":76,"endColumn":37},{"ruleId":"76","severity":1,"message":"82","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":17},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":15},{"ruleId":"76","severity":1,"message":"84","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":18},{"ruleId":"76","severity":1,"message":"85","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":16},{"ruleId":"76","severity":1,"message":"86","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":18},{"ruleId":"76","severity":1,"message":"87","line":11,"column":12,"nodeType":"78","messageId":"79","endLine":11,"endColumn":22},{"ruleId":"76","severity":1,"message":"88","line":11,"column":24,"nodeType":"78","messageId":"79","endLine":11,"endColumn":37},{"ruleId":"76","severity":1,"message":"89","line":13,"column":12,"nodeType":"78","messageId":"79","endLine":13,"endColumn":22},{"ruleId":"76","severity":1,"message":"90","line":13,"column":24,"nodeType":"78","messageId":"79","endLine":13,"endColumn":37},{"ruleId":"72","replacedBy":"91"},{"ruleId":"74","replacedBy":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'seturlImg' is assigned a value but never used.","Identifier","unusedVar","'setDataToUpdate' is assigned a value but never used.","'setRowsFilter' is assigned a value but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'dataSalary' is assigned a value but never used.","'setDataSalary' is assigned a value but never used.","'dataProfit' is assigned a value but never used.","'setDataProfit' is assigned a value but never used.",["93"],["94"],"no-global-assign","no-unsafe-negation"]